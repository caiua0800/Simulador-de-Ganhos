{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caiu\\xE3\\\\Desktop\\\\DEV - PATH\\\\TRABALHO\\\\cadastro-produtos-react\\\\src\\\\Components\\\\RespostaSimulacao.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Response from \"./Response\";\n\n// Função para calcular o lucro total de uma combinação de produtos\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst calcularLucroCombinação = combinação => {\n  return combinação.reduce((total, produto) => total + produto.precoVenda - produto.precoFinal, 0);\n};\nexport default function RespostaSimulacao({\n  produtos\n}) {\n  _s();\n  const [lucroDesejado, setLucroDesejado] = useState(0);\n  const [pesoMaximo, setPesoMaximo] = useState(0);\n  const [capacidadeCaminhao, setCapacidadeCaminhao] = useState(0);\n  const [combinações, setCombinações] = useState([]);\n\n  // Função para encontrar todas as combinações possíveis de produtos\n  const encontrarCombinações = () => {\n    const combinações = [];\n\n    // Função auxiliar para gerar todas as combinações possíveis\n    const gerarCombinações = (produtos, combinaçãoAtual, index) => {\n      if (index === produtos.length) {\n        // Verifica se a combinação atual atende aos critérios de peso e capacidade do caminhão\n        const pesoTotal = combinaçãoAtual.reduce((total, produto) => total + produto.peso, 0);\n        const volumeTotal = combinaçãoAtual.reduce((total, produto) => total + produto.m3, 0);\n        if (pesoTotal <= pesoMaximo && volumeTotal <= capacidadeCaminhao) {\n          combinações.push(combinaçãoAtual);\n        }\n        return;\n      }\n\n      // Inclui o produto atual na combinação e chama recursivamente a função para o próximo produto\n      gerarCombinações(produtos, combinaçãoAtual.concat(produtos[index]), index + 1);\n      // Chama recursivamente a função sem incluir o produto atual na combinação\n      gerarCombinações(produtos, combinaçãoAtual, index + 1);\n    };\n\n    // Inicializa a geração de combinações\n    gerarCombinações(produtos, [], 0);\n\n    // Filtra combinações que atingem o lucro desejado\n    const combinaçõesFiltradas = combinações.filter(combinação => calcularLucroCombinação(combinação) >= lucroDesejado);\n\n    // Define as combinações encontradas no estado 'combinações'\n    setCombinações(combinaçõesFiltradas);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RespostaSimulacao\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RespostaSimulacaoHeader\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"SimulacoesTitle\",\n        children: \"SIMULA\\xC7\\xD5ES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quanto de lucro deseja ganhar?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: lucroDesejado,\n        onChange: e => setLucroDesejado(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Peso m\\xE1ximo do caminh\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: pesoMaximo,\n        onChange: e => setPesoMaximo(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Capacidade total do caminh\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: capacidadeCaminhao,\n        onChange: e => setCapacidadeCaminhao(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: encontrarCombinações,\n        children: \"Gerar Possibilidades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: combinações.map((combinação, index) => /*#__PURE__*/_jsxDEV(Response, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Combina\\xE7\\xE3o \", index + 1, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: combinação.map(produto => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: produto.nome\n          }, produto.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Lucro: R$ \", calcularLucroCombinação(combinação)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(RespostaSimulacao, \"8j66G5ik+L1ukj0llnvlo2Q7O08=\");\n_c = RespostaSimulacao;\nvar _c;\n$RefreshReg$(_c, \"RespostaSimulacao\");","map":{"version":3,"names":["React","useState","Response","jsxDEV","_jsxDEV","calcularLucroCombinação","combinação","reduce","total","produto","precoVenda","precoFinal","RespostaSimulacao","produtos","_s","lucroDesejado","setLucroDesejado","pesoMaximo","setPesoMaximo","capacidadeCaminhao","setCapacidadeCaminhao","combinações","setCombinações","encontrarCombinações","gerarCombinações","combinaçãoAtual","index","length","pesoTotal","peso","volumeTotal","m3","push","concat","combinaçõesFiltradas","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","parseInt","target","onClick","map","nome","id","_c","$RefreshReg$"],"sources":["C:/Users/Caiuã/Desktop/DEV - PATH/TRABALHO/cadastro-produtos-react/src/Components/RespostaSimulacao.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Response from \"./Response\";\r\n\r\n// Função para calcular o lucro total de uma combinação de produtos\r\nconst calcularLucroCombinação = (combinação) => {\r\n  return combinação.reduce((total, produto) => total + produto.precoVenda - produto.precoFinal, 0);\r\n};\r\n\r\nexport default function RespostaSimulacao({ produtos }) {\r\n  const [lucroDesejado, setLucroDesejado] = useState(0);\r\n  const [pesoMaximo, setPesoMaximo] = useState(0);\r\n  const [capacidadeCaminhao, setCapacidadeCaminhao] = useState(0);\r\n  const [combinações, setCombinações] = useState([]);\r\n\r\n  // Função para encontrar todas as combinações possíveis de produtos\r\n  const encontrarCombinações = () => {\r\n    const combinações = [];\r\n\r\n    // Função auxiliar para gerar todas as combinações possíveis\r\n    const gerarCombinações = (produtos, combinaçãoAtual, index) => {\r\n      if (index === produtos.length) {\r\n        // Verifica se a combinação atual atende aos critérios de peso e capacidade do caminhão\r\n        const pesoTotal = combinaçãoAtual.reduce((total, produto) => total + produto.peso, 0);\r\n        const volumeTotal = combinaçãoAtual.reduce((total, produto) => total + produto.m3, 0);\r\n        if (pesoTotal <= pesoMaximo && volumeTotal <= capacidadeCaminhao) {\r\n          combinações.push(combinaçãoAtual);\r\n        }\r\n        return;\r\n      }\r\n\r\n      // Inclui o produto atual na combinação e chama recursivamente a função para o próximo produto\r\n      gerarCombinações(produtos, combinaçãoAtual.concat(produtos[index]), index + 1);\r\n      // Chama recursivamente a função sem incluir o produto atual na combinação\r\n      gerarCombinações(produtos, combinaçãoAtual, index + 1);\r\n    };\r\n\r\n    // Inicializa a geração de combinações\r\n    gerarCombinações(produtos, [], 0);\r\n\r\n    // Filtra combinações que atingem o lucro desejado\r\n    const combinaçõesFiltradas = combinações.filter(combinação => calcularLucroCombinação(combinação) >= lucroDesejado);\r\n\r\n    // Define as combinações encontradas no estado 'combinações'\r\n    setCombinações(combinaçõesFiltradas);\r\n  };\r\n\r\n  return (\r\n    <div className=\"RespostaSimulacao\">\r\n      <div className=\"RespostaSimulacaoHeader\">\r\n        <h1 className=\"SimulacoesTitle\">SIMULAÇÕES</h1>\r\n      </div>\r\n      <div>\r\n        <h2>Quanto de lucro deseja ganhar?</h2>\r\n        <input\r\n          type=\"number\"\r\n          value={lucroDesejado}\r\n          onChange={(e) => setLucroDesejado(parseInt(e.target.value))}\r\n        />\r\n        <h3>Peso máximo do caminhão</h3>\r\n        <input\r\n          type=\"number\"\r\n          value={pesoMaximo}\r\n          onChange={(e) => setPesoMaximo(parseInt(e.target.value))}\r\n        />\r\n        <h3>Capacidade total do caminhão</h3>\r\n        <input\r\n          type=\"number\"\r\n          value={capacidadeCaminhao}\r\n          onChange={(e) => setCapacidadeCaminhao(parseInt(e.target.value))}\r\n        />\r\n        <button onClick={encontrarCombinações}>Gerar Possibilidades</button>\r\n      </div>\r\n      <div>\r\n        {combinações.map((combinação, index) => (\r\n          <Response key={index}>\r\n            <p>Combinação {index + 1}:</p>\r\n            <ul>\r\n              {combinação.map((produto) => (\r\n                <li key={produto.id}>{produto.nome}</li>\r\n              ))}\r\n            </ul>\r\n            <p>Lucro: R$ {calcularLucroCombinação(combinação)}</p>\r\n          </Response>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}