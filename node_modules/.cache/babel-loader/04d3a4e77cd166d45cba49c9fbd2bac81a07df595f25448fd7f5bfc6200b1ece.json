{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caiu\\xE3\\\\Desktop\\\\DEV - PATH\\\\TRABALHO\\\\cadastro-produtos-react\\\\src\\\\Simulacao.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\nimport { initializeApp } from 'firebase/app';\nimport firebaseConfig from './Components/firebaseConfig';\nimport RespostaSimulacao from './Components/RespostaSimulacao';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Simulacao() {\n  _s();\n  const [produtos, setProdutos] = useState([]);\n  const [combinações, setCombinações] = useState([]);\n  const [lucroDesejado, setLucroDesejado] = useState(0);\n  const [pesoMaximo, setPesoMaximo] = useState(0);\n  const [capacidadeCaminhao, setCapacidadeCaminhao] = useState(0);\n  useEffect(() => {\n    const fetchProdutos = async () => {\n      try {\n        const app = initializeApp(firebaseConfig);\n        const db = getFirestore(app);\n        const produtosRef = collection(db, 'produtos');\n        const produtosSnapshot = await getDocs(produtosRef);\n        const produtosData = produtosSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setProdutos(produtosData);\n      } catch (error) {\n        console.error('Erro ao buscar os produtos:', error);\n      }\n    };\n    fetchProdutos();\n  }, []);\n  const gerarCombinações = (índice, combinaçãoAtual, pesoAtual, volumeAtual) => {\n    // Verifica se atingiu o peso máximo ou a capacidade do caminhão\n    if (pesoAtual > pesoMaximo || volumeAtual > capacidadeCaminhao) {\n      return;\n    }\n\n    // Verifica se a combinação atual atende ao lucro desejado\n    const lucroAtual = calcularLucro(combinaçãoAtual, margemMinima, margemMaxima);\n    if (lucroAtual >= lucroDesejado) {\n      combinaçõesPossíveis.push(combinaçãoAtual);\n    }\n\n    // Gera novas combinações incluindo o produto atual e chama recursivamente para os próximos produtos\n    for (let i = índice; i < produtos.length; i++) {\n      const produto = produtos[i];\n      const novoPeso = pesoAtual + produto.peso;\n      const novoVolume = volumeAtual + produto.volume;\n\n      // Calcula a quantidade máxima de vezes que o produto cabe no caminhão\n      const qtdMaxPeso = Math.floor((pesoMaximo - pesoAtual) / produto.peso);\n      const qtdMaxVolume = Math.floor((capacidadeCaminhao - volumeAtual) / produto.volume);\n      const qtdMax = Math.min(qtdMaxPeso, qtdMaxVolume);\n\n      // Adiciona o produto atual à combinação e chama recursivamente para os próximos produtos\n      for (let qtd = 1; qtd <= qtdMax; qtd++) {\n        gerarCombinações(i + 1, combinaçãoAtual.concat({\n          ...produto,\n          quantidade: qtd\n        }), novoPeso, novoVolume);\n      }\n    }\n  };\n\n  // Função para calcular o lucro total de uma combinação de produtos\n  const calcularLucro = (combinação, margemMinima, margemMaxima) => {\n    return combinação.reduce((total, produto) => {\n      // Calcula o preço de venda com base na margem de lucro\n      const margem = Math.random() * (margemMaxima - margemMinima) + margemMinima;\n      const precoVenda = produto.precoFinal * (1 + margem);\n\n      // Calcula o lucro para o produto considerando a quantidade\n      return total + (precoVenda - produto.precoFinal) * produto.quantidade;\n    }, 0);\n  };\n  const handleLucroDesejadoChange = e => {\n    const valor = parseFloat(e.target.value);\n    if (!isNaN(valor)) {\n      setLucroDesejado(valor);\n    } else {\n      setLucroDesejado(null);\n    }\n  };\n  const handlePesoMaximoChange = e => {\n    const valor = parseFloat(e.target.value);\n    if (!isNaN(valor)) {\n      setPesoMaximo(valor);\n    } else {\n      setPesoMaximo(null);\n    }\n  };\n  const handleCapacidadeCaminhaoChange = e => {\n    const valor = parseFloat(e.target.value);\n    if (!isNaN(valor)) {\n      setCapacidadeCaminhao(valor);\n    } else {\n      setCapacidadeCaminhao(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Simulacao\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"custom-cursor Simulacao-title\",\n      children: \"Simula\\xE7\\xE3o De Lucro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PriceWannaWin\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quanto de lucro deseja ganhar?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe o lucro desejado\",\n        value: lucroDesejado,\n        onChange: handleLucroDesejadoChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Peso m\\xE1ximo caminh\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe o peso m\\xE1ximo\",\n        value: pesoMaximo,\n        onChange: handlePesoMaximoChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Capacidade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe a capacidade do caminh\\xE3o\",\n        value: capacidadeCaminhao,\n        onChange: handleCapacidadeCaminhaoChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: gerarPossibilidades,\n        children: \"Gerar Possibilidades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RespostaSimulacao, {\n      combinações: combinações\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n_s(Simulacao, \"7iyUGdFPBs9gUlIIbWXXV5TgfT4=\");\n_c = Simulacao;\nexport default Simulacao;\nvar _c;\n$RefreshReg$(_c, \"Simulacao\");","map":{"version":3,"names":["React","useEffect","useState","getFirestore","collection","getDocs","initializeApp","firebaseConfig","RespostaSimulacao","jsxDEV","_jsxDEV","Simulacao","_s","produtos","setProdutos","combinações","setCombinações","lucroDesejado","setLucroDesejado","pesoMaximo","setPesoMaximo","capacidadeCaminhao","setCapacidadeCaminhao","fetchProdutos","app","db","produtosRef","produtosSnapshot","produtosData","docs","map","doc","id","data","error","console","gerarCombinações","índice","combinaçãoAtual","pesoAtual","volumeAtual","lucroAtual","calcularLucro","margemMinima","margemMaxima","combinaçõesPossíveis","push","i","length","produto","novoPeso","peso","novoVolume","volume","qtdMaxPeso","Math","floor","qtdMaxVolume","qtdMax","min","qtd","concat","quantidade","combinação","reduce","total","margem","random","precoVenda","precoFinal","handleLucroDesejadoChange","e","valor","parseFloat","target","value","isNaN","handlePesoMaximoChange","handleCapacidadeCaminhaoChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","gerarPossibilidades","_c","$RefreshReg$"],"sources":["C:/Users/Caiuã/Desktop/DEV - PATH/TRABALHO/cadastro-produtos-react/src/Simulacao.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\r\nimport { initializeApp } from 'firebase/app'; \r\nimport firebaseConfig from './Components/firebaseConfig'; \r\nimport RespostaSimulacao from './Components/RespostaSimulacao';\r\n\r\nfunction Simulacao() {\r\n    const [produtos, setProdutos] = useState([]);\r\n    const [combinações, setCombinações] = useState([]);\r\n    const [lucroDesejado, setLucroDesejado] = useState(0);\r\n    const [pesoMaximo, setPesoMaximo] = useState(0);\r\n    const [capacidadeCaminhao, setCapacidadeCaminhao] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchProdutos = async () => {\r\n            try {\r\n                const app = initializeApp(firebaseConfig);\r\n                const db = getFirestore(app);\r\n                const produtosRef = collection(db, 'produtos');\r\n                const produtosSnapshot = await getDocs(produtosRef);\r\n                const produtosData = produtosSnapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }));\r\n                setProdutos(produtosData);\r\n            } catch (error) {\r\n                console.error('Erro ao buscar os produtos:', error);\r\n            }\r\n        };\r\n        fetchProdutos();\r\n    }, []); \r\n\r\n    const gerarCombinações = (índice, combinaçãoAtual, pesoAtual, volumeAtual) => {\r\n        // Verifica se atingiu o peso máximo ou a capacidade do caminhão\r\n        if (pesoAtual > pesoMaximo || volumeAtual > capacidadeCaminhao) {\r\n            return;\r\n        }\r\n    \r\n        // Verifica se a combinação atual atende ao lucro desejado\r\n        const lucroAtual = calcularLucro(combinaçãoAtual, margemMinima, margemMaxima);\r\n        if (lucroAtual >= lucroDesejado) {\r\n            combinaçõesPossíveis.push(combinaçãoAtual);\r\n        }\r\n    \r\n        // Gera novas combinações incluindo o produto atual e chama recursivamente para os próximos produtos\r\n        for (let i = índice; i < produtos.length; i++) {\r\n            const produto = produtos[i];\r\n            const novoPeso = pesoAtual + produto.peso;\r\n            const novoVolume = volumeAtual + produto.volume;\r\n            \r\n            // Calcula a quantidade máxima de vezes que o produto cabe no caminhão\r\n            const qtdMaxPeso = Math.floor((pesoMaximo - pesoAtual) / produto.peso);\r\n            const qtdMaxVolume = Math.floor((capacidadeCaminhao - volumeAtual) / produto.volume);\r\n            const qtdMax = Math.min(qtdMaxPeso, qtdMaxVolume);\r\n    \r\n            // Adiciona o produto atual à combinação e chama recursivamente para os próximos produtos\r\n            for (let qtd = 1; qtd <= qtdMax; qtd++) {\r\n                gerarCombinações(i + 1, combinaçãoAtual.concat({ ...produto, quantidade: qtd }), novoPeso, novoVolume);\r\n            }\r\n        }\r\n    };\r\n    \r\n    \r\n    \r\n\r\n    // Função para calcular o lucro total de uma combinação de produtos\r\n    const calcularLucro = (combinação, margemMinima, margemMaxima) => {\r\n        return combinação.reduce((total, produto) => {\r\n            // Calcula o preço de venda com base na margem de lucro\r\n            const margem = Math.random() * (margemMaxima - margemMinima) + margemMinima;\r\n            const precoVenda = produto.precoFinal * (1 + margem);\r\n\r\n            // Calcula o lucro para o produto considerando a quantidade\r\n            return total + (precoVenda - produto.precoFinal) * produto.quantidade;\r\n        }, 0);\r\n    };\r\n\r\n \r\n\r\n    const handleLucroDesejadoChange = (e) => {\r\n        const valor = parseFloat(e.target.value);\r\n        if (!isNaN(valor)) {\r\n            setLucroDesejado(valor);\r\n        } else {\r\n            setLucroDesejado(null);\r\n        }\r\n    };\r\n    \r\n    const handlePesoMaximoChange = (e) => {\r\n        const valor = parseFloat(e.target.value);\r\n        if (!isNaN(valor)) {\r\n            setPesoMaximo(valor);\r\n        } else {\r\n            setPesoMaximo(null);\r\n        }\r\n    };\r\n    \r\n    const handleCapacidadeCaminhaoChange = (e) => {\r\n        const valor = parseFloat(e.target.value);\r\n        if (!isNaN(valor)) {\r\n            setCapacidadeCaminhao(valor);\r\n        } else {\r\n            setCapacidadeCaminhao(null);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <div className='Simulacao'>\r\n            <h1 className='custom-cursor Simulacao-title'>Simulação De Lucro</h1>\r\n            <div className='PriceWannaWin'>\r\n                <h2>Quanto de lucro deseja ganhar?</h2>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o lucro desejado'\r\n                    value={lucroDesejado} \r\n                    onChange={handleLucroDesejadoChange} \r\n                />\r\n                <h3>Peso máximo caminhão</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o peso máximo'\r\n                    value={pesoMaximo} \r\n                    onChange={handlePesoMaximoChange} \r\n                />\r\n                <h3>Capacidade</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe a capacidade do caminhão'\r\n                    value={capacidadeCaminhao} \r\n                    onChange={handleCapacidadeCaminhaoChange} \r\n                />\r\n                <button onClick={gerarPossibilidades}>Gerar Possibilidades</button>\r\n            </div>\r\n            <RespostaSimulacao combinações={combinações} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Simulacao;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}