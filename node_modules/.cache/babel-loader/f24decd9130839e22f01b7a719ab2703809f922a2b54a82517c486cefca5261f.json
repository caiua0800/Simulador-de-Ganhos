{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caiu\\xE3\\\\Desktop\\\\DEV - PATH\\\\TRABALHO\\\\cadastro-produtos-react\\\\src\\\\Simulacao.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\nimport { initializeApp } from 'firebase/app';\nimport firebaseConfig from './Components/firebaseConfig';\nimport RespostaSimulacao from './Components/RespostaSimulacao';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Simulacao() {\n  _s();\n  const [produtos, setProdutos] = useState([]);\n  const [combinações, setCombinações] = useState([]);\n  const [lucroDesejado, setLucroDesejado] = useState(0);\n  const [pesoMaximo, setPesoMaximo] = useState(0);\n  const [capacidadeCaminhao, setCapacidadeCaminhao] = useState(0);\n  useEffect(() => {\n    const fetchProdutos = async () => {\n      try {\n        const app = initializeApp(firebaseConfig);\n        const db = getFirestore(app);\n        const produtosRef = collection(db, 'produtos');\n        const produtosSnapshot = await getDocs(produtosRef);\n        const produtosData = produtosSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setProdutos(produtosData);\n      } catch (error) {\n        console.error('Erro ao buscar os produtos:', error);\n      }\n    };\n    fetchProdutos();\n  }, []);\n  const gerarPossibilidades = () => {\n    console.log(\"Gerando possibilidades...\");\n    const combinaçõesPossíveis = [];\n\n    // Definindo as margens de lucro\n    const margens = [0.1, 0.15, 0.2, 0.25, 0.3];\n\n    // Gerar combinações para cada margem de lucro\n    margens.forEach(margem => {\n      // Gerar combinações para um produto por caminhão\n      produtos.forEach(produto => {\n        const lucroAtual = calcularLucro(produto, margem);\n        if (lucroAtual >= lucroDesejado) {\n          combinaçõesPossíveis.push([{\n            ...produto,\n            quantidade: 1,\n            margem\n          }]);\n        }\n      });\n\n      // Gerar combinações para até 10 produtos por caminhão\n      for (let i = 2; i <= 10; i++) {\n        for (let j = 0; j < produtos.length; j++) {\n          const produto = produtos[j];\n          if (produto.quantidade >= i) {\n            const lucroAtual = calcularLucro({\n              ...produto,\n              quantidade: i\n            }, margem);\n            if (lucroAtual >= lucroDesejado) {\n              combinaçõesPossíveis.push([{\n                ...produto,\n                quantidade: i,\n                margem\n              }]);\n            }\n          }\n        }\n      }\n    });\n    console.log(\"Combinações possíveis:\", combinaçõesPossíveis);\n    setCombinações(combinaçõesPossíveis);\n  };\n  const calcularLucro = (produto, margem) => {\n    // Calcula o preço de venda com base na margem de lucro\n    const precoVenda = produto.PRECO_FINAL * (1 + margem);\n\n    // Calcula o lucro para o produto\n    return (precoVenda - produto.PRECO_FINAL) * produto.quantidade;\n  };\n  const handleLucroDesejadoChange = e => {\n    const valor = parseFloat(e.target.value);\n    if (!isNaN(valor)) {\n      setLucroDesejado(valor);\n    } else {\n      setLucroDesejado(0);\n    }\n  };\n  const handlePesoMaximoChange = e => {\n    const valor = parseFloat(e.target.value);\n    if (!isNaN(valor)) {\n      setPesoMaximo(valor);\n    } else {\n      setPesoMaximo(0);\n    }\n  };\n  const handleCapacidadeCaminhaoChange = e => {\n    const valor = parseFloat(e.target.value);\n    if (!isNaN(valor)) {\n      setCapacidadeCaminhao(valor);\n    } else {\n      setCapacidadeCaminhao(0);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Simulacao\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"custom-cursor Simulacao-title\",\n      children: \"Simula\\xE7\\xE3o De Lucro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PriceWannaWin\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quanto de lucro deseja ganhar?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe o lucro desejado\",\n        value: lucroDesejado,\n        onChange: handleLucroDesejadoChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Peso m\\xE1ximo caminh\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe o peso m\\xE1ximo\",\n        value: pesoMaximo,\n        onChange: handlePesoMaximoChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Capacidade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe a capacidade do caminh\\xE3o\",\n        value: capacidadeCaminhao,\n        onChange: handleCapacidadeCaminhaoChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: gerarPossibilidades,\n        children: \"Gerar Possibilidades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RespostaSimulacao, {\n      combinações: combinações\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n_s(Simulacao, \"7iyUGdFPBs9gUlIIbWXXV5TgfT4=\");\n_c = Simulacao;\nexport default Simulacao;\nvar _c;\n$RefreshReg$(_c, \"Simulacao\");","map":{"version":3,"names":["React","useEffect","useState","getFirestore","collection","getDocs","initializeApp","firebaseConfig","RespostaSimulacao","jsxDEV","_jsxDEV","Simulacao","_s","produtos","setProdutos","combinações","setCombinações","lucroDesejado","setLucroDesejado","pesoMaximo","setPesoMaximo","capacidadeCaminhao","setCapacidadeCaminhao","fetchProdutos","app","db","produtosRef","produtosSnapshot","produtosData","docs","map","doc","id","data","error","console","gerarPossibilidades","log","combinaçõesPossíveis","margens","forEach","margem","produto","lucroAtual","calcularLucro","push","quantidade","i","j","length","precoVenda","PRECO_FINAL","handleLucroDesejadoChange","e","valor","parseFloat","target","value","isNaN","handlePesoMaximoChange","handleCapacidadeCaminhaoChange","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Caiuã/Desktop/DEV - PATH/TRABALHO/cadastro-produtos-react/src/Simulacao.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\r\nimport { initializeApp } from 'firebase/app'; \r\nimport firebaseConfig from './Components/firebaseConfig'; \r\nimport RespostaSimulacao from './Components/RespostaSimulacao';\r\n\r\nfunction Simulacao() {\r\n    const [produtos, setProdutos] = useState([]);\r\n    const [combinações, setCombinações] = useState([]);\r\n    const [lucroDesejado, setLucroDesejado] = useState(0);\r\n    const [pesoMaximo, setPesoMaximo] = useState(0);\r\n    const [capacidadeCaminhao, setCapacidadeCaminhao] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchProdutos = async () => {\r\n            try {\r\n                const app = initializeApp(firebaseConfig);\r\n                const db = getFirestore(app);\r\n                const produtosRef = collection(db, 'produtos');\r\n                const produtosSnapshot = await getDocs(produtosRef);\r\n                const produtosData = produtosSnapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }));\r\n                setProdutos(produtosData);\r\n            } catch (error) {\r\n                console.error('Erro ao buscar os produtos:', error);\r\n            }\r\n        };\r\n        fetchProdutos();\r\n    }, []); \r\n\r\n    const gerarPossibilidades = () => {\r\n        console.log(\"Gerando possibilidades...\");\r\n        const combinaçõesPossíveis = [];\r\n        \r\n        // Definindo as margens de lucro\r\n        const margens = [0.1, 0.15, 0.2, 0.25, 0.3];\r\n\r\n        // Gerar combinações para cada margem de lucro\r\n        margens.forEach(margem => {\r\n            // Gerar combinações para um produto por caminhão\r\n            produtos.forEach(produto => {\r\n                const lucroAtual = calcularLucro(produto, margem);\r\n                if (lucroAtual >= lucroDesejado) {\r\n                    combinaçõesPossíveis.push([{ ...produto, quantidade: 1, margem }]);\r\n                }\r\n            });\r\n\r\n            // Gerar combinações para até 10 produtos por caminhão\r\n            for (let i = 2; i <= 10; i++) {\r\n                for (let j = 0; j < produtos.length; j++) {\r\n                    const produto = produtos[j];\r\n                    if (produto.quantidade >= i) {\r\n                        const lucroAtual = calcularLucro({ ...produto, quantidade: i }, margem);\r\n                        if (lucroAtual >= lucroDesejado) {\r\n                            combinaçõesPossíveis.push([{ ...produto, quantidade: i, margem }]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log(\"Combinações possíveis:\", combinaçõesPossíveis);\r\n        setCombinações(combinaçõesPossíveis);\r\n    };\r\n    \r\n    \r\n    const calcularLucro = (produto, margem) => {\r\n        // Calcula o preço de venda com base na margem de lucro\r\n        const precoVenda = produto.PRECO_FINAL * (1 + margem);\r\n\r\n        // Calcula o lucro para o produto\r\n        return (precoVenda - produto.PRECO_FINAL) * produto.quantidade;\r\n    };\r\n\r\n \r\n\r\n    const handleLucroDesejadoChange = (e) => {\r\n        const valor = parseFloat(e.target.value);\r\n        if (!isNaN(valor)) {\r\n            setLucroDesejado(valor);\r\n        } else {\r\n            setLucroDesejado(0);\r\n        }\r\n    };\r\n    \r\n    const handlePesoMaximoChange = (e) => {\r\n        const valor = parseFloat(e.target.value);\r\n        if (!isNaN(valor)) {\r\n            setPesoMaximo(valor);\r\n        } else {\r\n            setPesoMaximo(0);\r\n        }\r\n    };\r\n    \r\n    const handleCapacidadeCaminhaoChange = (e) => {\r\n        const valor = parseFloat(e.target.value);\r\n        if (!isNaN(valor)) {\r\n            setCapacidadeCaminhao(valor);\r\n        } else {\r\n            setCapacidadeCaminhao(0);\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <div className='Simulacao'>\r\n            <h1 className='custom-cursor Simulacao-title'>Simulação De Lucro</h1>\r\n            <div className='PriceWannaWin'>\r\n                <h2>Quanto de lucro deseja ganhar?</h2>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o lucro desejado'\r\n                    value={lucroDesejado} \r\n                    onChange={handleLucroDesejadoChange} \r\n                />\r\n                <h3>Peso máximo caminhão</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o peso máximo'\r\n                    value={pesoMaximo} \r\n                    onChange={handlePesoMaximoChange} \r\n                />\r\n                <h3>Capacidade</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe a capacidade do caminhão'\r\n                    value={capacidadeCaminhao} \r\n                    onChange={handleCapacidadeCaminhaoChange} \r\n                />\r\n                <button onClick={gerarPossibilidades}>Gerar Possibilidades</button>\r\n            </div>\r\n            <RespostaSimulacao combinações={combinações} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Simulacao;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}