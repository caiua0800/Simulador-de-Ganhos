{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caiu\\xE3\\\\Desktop\\\\DEV - PATH\\\\TRABALHO\\\\cadastro-produtos-react\\\\src\\\\Simulacao.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\nimport { initializeApp } from 'firebase/app';\nimport firebaseConfig from './Components/firebaseConfig';\nimport RespostaSimulacao from './Components/RespostaSimulacao';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Simulacao() {\n  _s();\n  const [produtos, setProdutos] = useState([]);\n  const [lucroDesejado, setLucroDesejado] = useState('');\n  const [pesoMaximo, setPesoMaximo] = useState('');\n  const [capacidadeCaminhao, setCapacidadeCaminhao] = useState('');\n  const [combinations, setCombinations] = useState([]);\n  useEffect(() => {\n    const fetchProdutos = async () => {\n      try {\n        const app = initializeApp(firebaseConfig);\n        const db = getFirestore(app);\n        const produtosRef = collection(db, 'produtos');\n        const produtosSnapshot = await getDocs(produtosRef);\n        const produtosData = produtosSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setProdutos(produtosData);\n      } catch (error) {\n        console.error('Erro ao buscar os produtos:', error);\n      }\n    };\n    fetchProdutos();\n  }, []);\n  const handleGerarPossibilidades = () => {\n    const info_products = produtos.map(p => ({\n      custo: parseFloat(p.PRECO_FINAL),\n      nome: p.Nome,\n      peso: parseFloat(p.Peso),\n      volume: parseFloat(p.m3)\n    }));\n    generateCombinations(info_products);\n  };\n  const calculateCombination = products => {\n    let totalCusto = 0;\n    let totalVolume = 0;\n    let totalPeso = 0;\n\n    // Calcula o custo total, volume total e peso total da combinação\n    products.forEach(product => {\n      totalCusto += product.custo;\n      totalVolume += product.volume;\n      totalPeso += product.peso;\n    });\n\n    // Calcula o lucro desejado\n    const lucro_desejado = parseFloat(lucroDesejado).toFixed(2);\n\n    // Calcula o custo unitário médio\n    const custo_unitario_medio = totalCusto / products.length;\n\n    // Calcula o preço de venda unitário com base no lucro desejado\n    const venda_unitaria = parseFloat(custo_unitario_medio) + parseFloat(custo_unitario_medio) * (parseFloat(lucro_desejado) / totalCusto);\n\n    // Calcula o lucro unitário\n    const lucro_unitario = venda_unitaria - custo_unitario_medio;\n\n    // Calcula o lucro total\n    const lucro_total = lucro_unitario * products.length;\n\n    // Retorna um objeto contendo os atributos calculados\n    return {\n      produtos: products.map(product => product.nome),\n      volume_t: totalVolume.toFixed(2),\n      peso_t: totalPeso.toFixed(2),\n      custo_uni: custo_unitario_medio.toFixed(2),\n      venda_uni: venda_unitaria.toFixed(2),\n      lucro_uni: lucro_unitario.toFixed(2),\n      lucro_t: lucro_total.toFixed(2),\n      qtde: products.length\n    };\n  };\n  const generateCombinations = products => {\n    const newCombinations = [];\n    const maxProducts = Math.min(products.length, 5);\n\n    // Gera todas as combinações possíveis de 2 a 5 produtos\n    for (let i = 2; i <= maxProducts; i++) {\n      for (let j = 0; j <= products.length - i; j++) {\n        const combination = products.slice(j, j + i);\n        newCombinations.push(calculateCombination(combination));\n      }\n    }\n    setCombinations(newCombinations);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Simulacao\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"custom-cursor Simulacao-title\",\n      children: \"Simula\\xE7\\xE3o De Lucro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PriceWannaWin\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quanto de lucro deseja ganhar?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe o lucro desejado\",\n        value: lucroDesejado,\n        onChange: e => setLucroDesejado(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Peso m\\xE1ximo caminh\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe o peso m\\xE1ximo\",\n        value: pesoMaximo,\n        onChange: e => setPesoMaximo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Capacidade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe a capacidade do caminh\\xE3o\",\n        value: capacidadeCaminhao,\n        onChange: e => setCapacidadeCaminhao(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGerarPossibilidades,\n        children: \"Gerar Possibilidades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RespostaSimulacao, {\n      combinations: combinations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n}\n_s(Simulacao, \"1n0gHHpGrF/ggzEhEgKMuWYqgBo=\");\n_c = Simulacao;\nexport default Simulacao;\nvar _c;\n$RefreshReg$(_c, \"Simulacao\");","map":{"version":3,"names":["React","useEffect","useState","getFirestore","collection","getDocs","initializeApp","firebaseConfig","RespostaSimulacao","jsxDEV","_jsxDEV","Simulacao","_s","produtos","setProdutos","lucroDesejado","setLucroDesejado","pesoMaximo","setPesoMaximo","capacidadeCaminhao","setCapacidadeCaminhao","combinations","setCombinations","fetchProdutos","app","db","produtosRef","produtosSnapshot","produtosData","docs","map","doc","id","data","error","console","handleGerarPossibilidades","info_products","p","custo","parseFloat","PRECO_FINAL","nome","Nome","peso","Peso","volume","m3","generateCombinations","calculateCombination","products","totalCusto","totalVolume","totalPeso","forEach","product","lucro_desejado","toFixed","custo_unitario_medio","length","venda_unitaria","lucro_unitario","lucro_total","volume_t","peso_t","custo_uni","venda_uni","lucro_uni","lucro_t","qtde","newCombinations","maxProducts","Math","min","i","j","combination","slice","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Caiuã/Desktop/DEV - PATH/TRABALHO/cadastro-produtos-react/src/Simulacao.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\r\nimport { initializeApp } from 'firebase/app'; \r\nimport firebaseConfig from './Components/firebaseConfig'; \r\nimport RespostaSimulacao from './Components/RespostaSimulacao';\r\n\r\nfunction Simulacao() {\r\n    const [produtos, setProdutos] = useState([]);\r\n    const [lucroDesejado, setLucroDesejado] = useState('');\r\n    const [pesoMaximo, setPesoMaximo] = useState('');\r\n    const [capacidadeCaminhao, setCapacidadeCaminhao] = useState('');\r\n    const [combinations, setCombinations] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchProdutos = async () => {\r\n            try {\r\n                const app = initializeApp(firebaseConfig);\r\n                const db = getFirestore(app);\r\n                const produtosRef = collection(db, 'produtos');\r\n                const produtosSnapshot = await getDocs(produtosRef);\r\n                const produtosData = produtosSnapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }));\r\n                setProdutos(produtosData);\r\n            } catch (error) {\r\n                console.error('Erro ao buscar os produtos:', error);\r\n            }\r\n        };\r\n        fetchProdutos();\r\n    }, []); \r\n\r\n    const handleGerarPossibilidades = () => {\r\n        const info_products = produtos.map(p => ({\r\n            custo: parseFloat(p.PRECO_FINAL),\r\n            nome: p.Nome,\r\n            peso: parseFloat(p.Peso),\r\n            volume: parseFloat(p.m3)\r\n        }));\r\n\r\n        generateCombinations(info_products);\r\n    };\r\n\r\n    const calculateCombination = (products) => {\r\n        let totalCusto = 0;\r\n        let totalVolume = 0;\r\n        let totalPeso = 0;\r\n\r\n        // Calcula o custo total, volume total e peso total da combinação\r\n        products.forEach(product => {\r\n            totalCusto += product.custo;\r\n            totalVolume += product.volume;\r\n            totalPeso += product.peso;\r\n        });\r\n\r\n        // Calcula o lucro desejado\r\n        const lucro_desejado = parseFloat(lucroDesejado).toFixed(2);\r\n\r\n        // Calcula o custo unitário médio\r\n        const custo_unitario_medio = totalCusto / products.length;\r\n\r\n        // Calcula o preço de venda unitário com base no lucro desejado\r\n        const venda_unitaria = parseFloat(custo_unitario_medio) + (parseFloat(custo_unitario_medio) * (parseFloat(lucro_desejado) / totalCusto));\r\n\r\n        // Calcula o lucro unitário\r\n        const lucro_unitario = venda_unitaria - custo_unitario_medio;\r\n\r\n        // Calcula o lucro total\r\n        const lucro_total = lucro_unitario * products.length;\r\n\r\n        // Retorna um objeto contendo os atributos calculados\r\n        return {\r\n            produtos: products.map(product => product.nome),\r\n            volume_t: totalVolume.toFixed(2),\r\n            peso_t: totalPeso.toFixed(2),\r\n            custo_uni: custo_unitario_medio.toFixed(2),\r\n            venda_uni: venda_unitaria.toFixed(2),\r\n            lucro_uni: lucro_unitario.toFixed(2),\r\n            lucro_t: lucro_total.toFixed(2),\r\n            qtde: products.length\r\n        };\r\n    };\r\n\r\n    const generateCombinations = (products) => {\r\n        const newCombinations = [];\r\n        const maxProducts = Math.min(products.length, 5);\r\n\r\n        // Gera todas as combinações possíveis de 2 a 5 produtos\r\n        for (let i = 2; i <= maxProducts; i++) {\r\n            for (let j = 0; j <= products.length - i; j++) {\r\n                const combination = products.slice(j, j + i);\r\n                newCombinations.push(calculateCombination(combination));\r\n            }\r\n        }\r\n\r\n        setCombinations(newCombinations);\r\n    };\r\n\r\n    return (\r\n        <div className='Simulacao'>\r\n            <h1 className='custom-cursor Simulacao-title'>Simulação De Lucro</h1>\r\n            <div className='PriceWannaWin'>\r\n                <h2>Quanto de lucro deseja ganhar?</h2>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o lucro desejado' \r\n                    value={lucroDesejado}\r\n                    onChange={(e) => setLucroDesejado(e.target.value)}\r\n                />\r\n                <h3>Peso máximo caminhão</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o peso máximo'\r\n                    value={pesoMaximo}\r\n                    onChange={(e) => setPesoMaximo(e.target.value)} \r\n                />\r\n                <h3>Capacidade</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe a capacidade do caminhão'\r\n                    value={capacidadeCaminhao}\r\n                    onChange={(e) => setCapacidadeCaminhao(e.target.value)} \r\n                />\r\n                <button onClick={handleGerarPossibilidades}>Gerar Possibilidades</button>\r\n            </div>\r\n            <RespostaSimulacao combinations={combinations} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Simulacao;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}