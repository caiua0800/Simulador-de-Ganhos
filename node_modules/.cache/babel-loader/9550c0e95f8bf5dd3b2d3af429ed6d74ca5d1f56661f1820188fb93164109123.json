{"ast":null,"code":"import React,{useEffect,useState}from'react';import{getFirestore,collection,getDocs}from'firebase/firestore';import{initializeApp}from'firebase/app';import firebaseConfig from'./Components/firebaseConfig';import RespostaSimulacao from'./Components/RespostaSimulacao';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Simulacao(){const[produtos,setProdutos]=useState([]);const[lucroDesejado,setLucroDesejado]=useState('');const[capacidade,setCapacidade]=useState('');const[VolumeCaminhao,setVolumeCaminhao]=useState('');const[Frete,setFrete]=useState('');const[maximoLucroUni,setMaximoLucroUni]=useState('');const[combinations,setCombinations]=useState([]);const[combinacaoUnica,setcombinacaoUnica]=useState([]);useEffect(()=>{const fetchProdutos=async()=>{try{const app=initializeApp(firebaseConfig);const db=getFirestore(app);const produtosRef=collection(db,'produtos');const produtosSnapshot=await getDocs(produtosRef);const produtosData=produtosSnapshot.docs.map(doc=>({id:doc.id,...doc.data()}));setProdutos(produtosData);}catch(error){console.error('Erro ao buscar os produtos:',error);}};fetchProdutos();},[]);const handleGerarPossibilidades=()=>{const info_products=produtos.map(p=>({custo:parseFloat(p.PRECO_FINAL),nome:p.Nome,peso:parseFloat(p.Peso),volume:parseFloat(p.m3)}));let TODAS_AS_COMBINACOES=new Set();let tentativas=0;let combsUnicas=[];info_products.forEach(produto=>{let qtde=parseInt(parseInt(VolumeCaminhao)/produto.volume);let peso_atual=0;if(qtde*produto.peso<parseInt(VolumeCaminhao)*parseInt(capacidade)){let comb={nome:produto.nome,qtde:qtde,peso:parseInt((qtde*parseFloat(produto.peso)).toFixed(2)),peso_unitario:produto.peso,volume_unitario:parseFloat(produto.volume.toFixed(2)),volume:parseFloat((produto.volume*qtde).toFixed(4)),custoUnitario:produto.custo,vendaUnitario:parseFloat((lucroDesejado/(produto.custo*qtde+parseInt(Frete))*produto.custo+produto.custo).toFixed(2)),lucroUnitario:parseFloat((lucroDesejado/(produto.custo*qtde+parseInt(Frete))*produto.custo).toFixed(2)),lucroTotal:parseFloat((lucroDesejado/(produto.custo*qtde+parseInt(Frete))*produto.custo*qtde).toFixed(2))};let lucroEmCima=comb.vendaUnitario/comb.custoUnitario*100;if(lucroEmCima<parseInt(maximoLucroUni))combsUnicas.push(comb);}});setcombinacaoUnica(combsUnicas);while(TODAS_AS_COMBINACOES.size<100&&tentativas<2500){let combinacao2=encherCaminhao(info_products);if(combinacao2){TODAS_AS_COMBINACOES.add(JSON.stringify(combinacao2));}tentativas++;}let masterCombinacoes=[];Array.from(TODAS_AS_COMBINACOES).map(comb=>{masterCombinacoes.push(JSON.parse(comb));});setCombinations(masterCombinacoes);};function encherCaminhao(objects){let random_nums=[];for(let i=0;i<6;i++){random_nums[i]=Math.floor(Math.random()*objects.length);}let aparicoes=contarPorcentagens(random_nums,objects.length);let chaves=Object.keys(aparicoes);let combinacao=[];for(let chave of chaves){let percentual=aparicoes[chave];let produto=objects[chave];if(produto.volume===0)console.log(produto.nome);let qtde=parseFloat(parseInt(VolumeCaminhao)/parseFloat(produto.volume)*percentual);if(!isNaN(qtde)||isFinite(qtde)){let comb={nome:produto.nome,aparicao:percentual,qtde:parseInt(qtde),peso:parseFloat((qtde*produto.peso).toFixed(2)),peso_unitario:produto.peso,volume_unitario:parseFloat(produto.volume.toFixed(2)),volume:parseFloat((produto.volume*qtde).toFixed(4)),custoUnitario:produto.custo,vendaUnitario:parseFloat((produto.custo/(lucroDesejado*percentual)*produto.custo+produto.custo).toFixed(2)),lucroUnitario:parseFloat((produto.custo/(lucroDesejado*percentual)*produto.custo).toFixed(2)),lucroTotal:parseFloat((produto.custo/(lucroDesejado*percentual)*produto.custo*qtde).toFixed(2))};if(isFinite(comb.qtde)&&!isNaN(comb.qtde)&&isFinite(comb.peso)&&!isNaN(comb.peso))if(parseFloat(comb.lucroUnitario)<=parseFloat(maximoLucroUni)){combinacao.push(comb);}}}let somaPesos=0;combinacao.forEach(comb=>{somaPesos+=parseFloat(comb.peso);});let somaVolume=0;combinacao.forEach(comb=>{somaVolume+=parseFloat(comb.volume);});let somaLucro=0;combinacao.forEach(comb=>{if(!isNaN(comb.lucroUnitario)){somaLucro+=comb.lucroUnitario*comb.qtde;}});let somaCusto=0;combinacao.forEach(comb=>{if(!isNaN(comb.custoUnitario)){somaCusto+=comb.custoUnitario*comb.qtde;}});let pesoMax=parseFloat(VolumeCaminhao)*parseFloat(capacidade);if(somaPesos<pesoMax-pesoMax*0.05&&somaVolume>=VolumeCaminhao*0.8&&somaVolume<=VolumeCaminhao){if(somaLucro>lucroDesejado-lucroDesejado*0.01&&somaLucro<lucroDesejado+lucroDesejado*0.05){combinacao.push({SOMA_LUCRO:somaLucro});combinacao.push({SOMA_CUSTO:somaCusto});combinacao.push({SOMA_VOLUME:somaVolume});combinacao.push({SOMA_PESO:somaPesos});return combinacao;}}else{combinacao.push(somaLucro);}}function contarPorcentagens(vetor,tamanhoTotal){var contagem={};for(var i=0;i<vetor.length;i++){var numero=vetor[i];if(contagem[numero])contagem[numero]++;else contagem[numero]=1;}for(var numero in contagem)contagem[numero]=contagem[numero]/tamanhoTotal;return contagem;}return/*#__PURE__*/_jsxs(\"div\",{className:\"Simulacao\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"custom-cursor Simulacao-title\",children:\"Simula\\xE7\\xE3o De Lucro\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"PriceWannaWin\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Quanto de lucro deseja ganhar?\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Informe o lucro desejado\",value:lucroDesejado,onChange:e=>setLucroDesejado(e.target.value)}),/*#__PURE__*/_jsx(\"h3\",{children:\"Capacidade de peso por metros cubicos\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Informe o peso m\\xE1ximo\",value:capacidade,onChange:e=>setCapacidade(e.target.value)}),/*#__PURE__*/_jsx(\"h3\",{children:\"Capacidade em metros cubicos\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Informe a capacidade do caminh\\xE3o\",value:VolumeCaminhao,onChange:e=>setVolumeCaminhao(e.target.value)}),/*#__PURE__*/_jsx(\"h3\",{children:\"Frete\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Informe a capacidade do caminh\\xE3o\",value:Frete,onChange:e=>setFrete(e.target.value)}),/*#__PURE__*/_jsx(\"h3\",{children:\"M\\xE1ximo de lucro sobre produto\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Informe a capacidade do caminh\\xE3o\",value:maximoLucroUni,onChange:e=>setMaximoLucroUni(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleGerarPossibilidades,children:\"Gerar Possibilidades\"})]}),/*#__PURE__*/_jsx(RespostaSimulacao,{combinacoesUnitarias:combinacaoUnica,frete:Frete,combinations:combinations})]});}export default Simulacao;","map":{"version":3,"names":["React","useEffect","useState","getFirestore","collection","getDocs","initializeApp","firebaseConfig","RespostaSimulacao","jsx","_jsx","jsxs","_jsxs","Simulacao","produtos","setProdutos","lucroDesejado","setLucroDesejado","capacidade","setCapacidade","VolumeCaminhao","setVolumeCaminhao","Frete","setFrete","maximoLucroUni","setMaximoLucroUni","combinations","setCombinations","combinacaoUnica","setcombinacaoUnica","fetchProdutos","app","db","produtosRef","produtosSnapshot","produtosData","docs","map","doc","id","data","error","console","handleGerarPossibilidades","info_products","p","custo","parseFloat","PRECO_FINAL","nome","Nome","peso","Peso","volume","m3","TODAS_AS_COMBINACOES","Set","tentativas","combsUnicas","forEach","produto","qtde","parseInt","peso_atual","comb","toFixed","peso_unitario","volume_unitario","custoUnitario","vendaUnitario","lucroUnitario","lucroTotal","lucroEmCima","push","size","combinacao2","encherCaminhao","add","JSON","stringify","masterCombinacoes","Array","from","parse","objects","random_nums","i","Math","floor","random","length","aparicoes","contarPorcentagens","chaves","Object","keys","combinacao","chave","percentual","log","isNaN","isFinite","aparicao","somaPesos","somaVolume","somaLucro","somaCusto","pesoMax","SOMA_LUCRO","SOMA_CUSTO","SOMA_VOLUME","SOMA_PESO","vetor","tamanhoTotal","contagem","numero","className","children","type","placeholder","value","onChange","e","target","onClick","combinacoesUnitarias","frete"],"sources":["C:/Users/CaiuÃ£/Desktop/DEV - PATH/TRABALHO/cadastro-produtos-react/src/Simulacao.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\r\nimport { initializeApp } from 'firebase/app'; \r\nimport firebaseConfig from './Components/firebaseConfig'; \r\nimport RespostaSimulacao from './Components/RespostaSimulacao';\r\n\r\nfunction Simulacao() {\r\n    const [produtos, setProdutos] = useState([]);\r\n    const [lucroDesejado, setLucroDesejado] = useState('');\r\n    const [capacidade, setCapacidade] = useState('');\r\n    const [VolumeCaminhao, setVolumeCaminhao] = useState('');\r\n    const [Frete, setFrete] = useState('');\r\n    const [maximoLucroUni, setMaximoLucroUni] = useState('');\r\n    const [combinations, setCombinations] = useState([]);\r\n    const [combinacaoUnica, setcombinacaoUnica] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchProdutos = async () => {\r\n            try {\r\n                const app = initializeApp(firebaseConfig);\r\n                const db = getFirestore(app);\r\n                const produtosRef = collection(db, 'produtos');\r\n                const produtosSnapshot = await getDocs(produtosRef);\r\n                const produtosData = produtosSnapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }));\r\n                setProdutos(produtosData);\r\n            } catch (error) {\r\n                console.error('Erro ao buscar os produtos:', error);\r\n            }\r\n        };\r\n        fetchProdutos();\r\n    }, []); \r\n\r\n    const handleGerarPossibilidades = () => {\r\n        const info_products = produtos.map(p => ({\r\n            custo: parseFloat(p.PRECO_FINAL),\r\n            nome: p.Nome,\r\n            peso: parseFloat(p.Peso),\r\n            volume: parseFloat(p.m3)\r\n        }));\r\n    \r\n        let TODAS_AS_COMBINACOES = new Set();\r\n        let tentativas = 0;\r\n\r\n        let combsUnicas = []\r\n        info_products.forEach(produto => {\r\n            let qtde = parseInt(parseInt(VolumeCaminhao) / produto.volume);\r\n            let peso_atual = 0;\r\n        \r\n            if ((qtde * produto.peso) < parseInt(VolumeCaminhao) * parseInt(capacidade)) {\r\n                let comb = {\r\n                    nome: produto.nome,\r\n                    qtde: qtde,\r\n                    peso: parseInt((qtde * parseFloat(produto.peso)).toFixed(2)),\r\n                    peso_unitario: produto.peso,\r\n                    volume_unitario: parseFloat(produto.volume.toFixed(2)),\r\n                    volume: parseFloat((produto.volume * qtde).toFixed(4)),\r\n                    custoUnitario: produto.custo,\r\n                    vendaUnitario: parseFloat(((lucroDesejado / ((produto.custo * qtde) + parseInt(Frete)) * produto.custo) + produto.custo).toFixed(2)),\r\n                    lucroUnitario: parseFloat((lucroDesejado / ((produto.custo * qtde) + parseInt(Frete)) * produto.custo).toFixed(2)),\r\n                    lucroTotal: parseFloat(((lucroDesejado / ((produto.custo * qtde) + parseInt(Frete)) * produto.custo) * qtde).toFixed(2)),\r\n                };\r\n\r\n\r\n                let lucroEmCima = (comb.vendaUnitario / comb.custoUnitario)*100\r\n                if(lucroEmCima < parseInt(maximoLucroUni))\r\n                    combsUnicas.push(comb)\r\n            }\r\n        });\r\n\r\n        setcombinacaoUnica(combsUnicas);\r\n        \r\n        while (TODAS_AS_COMBINACOES.size < 100 && tentativas < 2500) {\r\n            let combinacao2 = encherCaminhao(info_products);\r\n            if (combinacao2) {\r\n                TODAS_AS_COMBINACOES.add(JSON.stringify(combinacao2));\r\n            }\r\n            tentativas++;\r\n        }\r\n\r\n        let masterCombinacoes = [];\r\n        Array.from(TODAS_AS_COMBINACOES).map(comb =>{\r\n            masterCombinacoes.push(JSON.parse(comb))\r\n        });\r\n\r\n        setCombinations(masterCombinacoes)\r\n\r\n    };\r\n\r\n    function encherCaminhao(objects){\r\n        let random_nums = []\r\n        for(let i = 0; i < 6; i++){\r\n            random_nums[i] = Math.floor(Math.random() * objects.length);\r\n        }\r\n\r\n\r\n        let aparicoes = contarPorcentagens(random_nums, objects.length);\r\n\r\n        let chaves = Object.keys(aparicoes);\r\n\r\n        let combinacao = []\r\n\r\n\r\n        for(let chave of chaves){\r\n\r\n            let percentual = aparicoes[chave];\r\n            let produto = objects[chave];\r\n\r\n            if(produto.volume === 0)\r\n                console.log(produto.nome)\r\n\r\n            let qtde = parseFloat((parseInt(VolumeCaminhao)/parseFloat(produto.volume)) * percentual);\r\n\r\n            if(!isNaN(qtde) || isFinite(qtde)){\r\n                let comb = {\r\n                    nome: produto.nome,\r\n                    aparicao: percentual,\r\n                    qtde: parseInt(qtde),\r\n                    peso: parseFloat((qtde * produto.peso).toFixed(2)),\r\n                    peso_unitario: produto.peso,\r\n                    volume_unitario: parseFloat(produto.volume.toFixed(2)),\r\n                    volume: parseFloat((produto.volume * qtde).toFixed(4)),\r\n                    custoUnitario: produto.custo,\r\n                    vendaUnitario: parseFloat(((((produto.custo) / (lucroDesejado * percentual))* produto.custo) + produto.custo).toFixed(2)),\r\n                    lucroUnitario: parseFloat((((produto.custo) / (lucroDesejado * percentual))* produto.custo).toFixed(2)),\r\n                    lucroTotal: parseFloat(((((produto.custo) / (lucroDesejado * percentual))* produto.custo) * qtde).toFixed(2)),\r\n                }\r\n    \r\n    \r\n                if(isFinite(comb.qtde) && !isNaN(comb.qtde) && isFinite(comb.peso) && !isNaN(comb.peso))\r\n                    if(parseFloat(comb.lucroUnitario) <= parseFloat(maximoLucroUni)){\r\n                        combinacao.push(comb)\r\n                    }\r\n            }\r\n           \r\n        }\r\n    \r\n        let somaPesos = 0;\r\n        combinacao.forEach(comb => {\r\n            somaPesos += parseFloat(comb.peso)\r\n        })\r\n    \r\n        let somaVolume = 0;\r\n        combinacao.forEach(comb => {\r\n            somaVolume += parseFloat(comb.volume)\r\n        })\r\n    \r\n        let somaLucro = 0;\r\n        combinacao.forEach(comb => {\r\n            if (!isNaN(comb.lucroUnitario)) {\r\n                somaLucro += (comb.lucroUnitario * comb.qtde);\r\n            }\r\n        });\r\n\r\n        let somaCusto = 0;\r\n        combinacao.forEach(comb => {\r\n            if (!isNaN(comb.custoUnitario)) {\r\n                somaCusto += (comb.custoUnitario * comb.qtde);\r\n            }\r\n        });\r\n\r\n    \r\n        \r\n        let pesoMax = parseFloat(VolumeCaminhao)*parseFloat(capacidade)\r\n    \r\n        if(somaPesos < (pesoMax - (pesoMax * 0.05)) && somaVolume >= VolumeCaminhao*0.8 && somaVolume <= VolumeCaminhao){\r\n            if(somaLucro > (lucroDesejado - (lucroDesejado * 0.01)) && somaLucro < (lucroDesejado + (lucroDesejado * 0.05)) ){\r\n                combinacao.push({SOMA_LUCRO:somaLucro})\r\n                combinacao.push({SOMA_CUSTO:somaCusto})\r\n                combinacao.push({SOMA_VOLUME:somaVolume})\r\n                combinacao.push({SOMA_PESO:somaPesos})\r\n                return combinacao;\r\n            }\r\n        }else{\r\n            combinacao.push(somaLucro)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function contarPorcentagens(vetor, tamanhoTotal) {\r\n        var contagem = {};\r\n\r\n        for (var i = 0; i < vetor.length; i++) {\r\n            var numero = vetor[i];\r\n\r\n            if (contagem[numero]) \r\n                contagem[numero]++;\r\n            else \r\n                contagem[numero] = 1;\r\n        }\r\n    \r\n        for (var numero in contagem) \r\n            contagem[numero] = (contagem[numero] / tamanhoTotal);\r\n        return contagem;\r\n    }\r\n    \r\n    return (\r\n        <div className='Simulacao'>\r\n            <h1 className='custom-cursor Simulacao-title'>SimulaÃ§Ã£o De Lucro</h1>\r\n            <div className='PriceWannaWin'>\r\n                <h2>Quanto de lucro deseja ganhar?</h2>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o lucro desejado' \r\n                    value={lucroDesejado}\r\n                    onChange={(e) => setLucroDesejado(e.target.value)}\r\n                />\r\n                <h3>Capacidade de peso por metros cubicos</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o peso mÃ¡ximo'\r\n                    value={capacidade}\r\n                    onChange={(e) => setCapacidade(e.target.value)} \r\n                />\r\n                <h3>Capacidade em metros cubicos</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe a capacidade do caminhÃ£o'\r\n                    value={VolumeCaminhao}\r\n                    onChange={(e) => setVolumeCaminhao(e.target.value)} \r\n                />\r\n                <h3>Frete</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe a capacidade do caminhÃ£o'\r\n                    value={Frete}\r\n                    onChange={(e) => setFrete(e.target.value)} \r\n                />\r\n                <h3>MÃ¡ximo de lucro sobre produto</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe a capacidade do caminhÃ£o'\r\n                    value={maximoLucroUni}\r\n                    onChange={(e) => setMaximoLucroUni(e.target.value)} \r\n                />\r\n                <button onClick={handleGerarPossibilidades}>Gerar Possibilidades</button>\r\n            </div>\r\n            <RespostaSimulacao combinacoesUnitarias={combinacaoUnica} frete={Frete} combinations={combinations} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Simulacao;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}