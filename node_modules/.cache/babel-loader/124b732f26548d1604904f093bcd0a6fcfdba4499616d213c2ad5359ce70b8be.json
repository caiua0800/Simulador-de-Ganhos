{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caiu\\xE3\\\\Desktop\\\\DEV - PATH\\\\TRABALHO\\\\cadastro-produtos-react\\\\src\\\\Simulacao.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\nimport { initializeApp } from 'firebase/app';\nimport firebaseConfig from './Components/firebaseConfig';\nimport RespostaSimulacao from './Components/RespostaSimulacao';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Simulacao() {\n  _s();\n  const [produtos, setProdutos] = useState([]);\n  const [lucroDesejado, setLucroDesejado] = useState('');\n  const [pesoMaximo, setPesoMaximo] = useState('');\n  const [capacidadeCaminhao, setCapacidadeCaminhao] = useState('');\n  const [combinations, setCombinations] = useState([]);\n  useEffect(() => {\n    const fetchProdutos = async () => {\n      try {\n        const app = initializeApp(firebaseConfig);\n        const db = getFirestore(app);\n        const produtosRef = collection(db, 'produtos');\n        const produtosSnapshot = await getDocs(produtosRef);\n        const produtosData = produtosSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setProdutos(produtosData);\n      } catch (error) {\n        console.error('Erro ao buscar os produtos:', error);\n      }\n    };\n    fetchProdutos();\n  }, []);\n  const handleGerarPossibilidades = () => {\n    if (!lucroDesejado || !pesoMaximo || !capacidadeCaminhao) {\n      console.error('Preencha todos os campos antes de gerar as possibilidades.');\n      return;\n    }\n    if (!produtos || produtos.length === 0) {\n      console.error('Os produtos ainda estão sendo carregados ou não há produtos disponíveis. Por favor, aguarde e tente novamente.');\n      return;\n    }\n    const info_products = produtos.map(p => ({\n      custo: parseFloat(p.PRECO_FINAL),\n      nome: p.Nome,\n      peso: parseFloat(p.Peso),\n      volume: parseFloat(p.m3)\n    }));\n    const resultadoCombinacoes = encherCaminhaoComUmProduto(info_products, lucroDesejado, pesoMaximo, capacidadeCaminhao);\n    setCombinations(resultadoCombinacoes);\n  };\n  function encherCaminhaoComUmProduto(objts, lucroDesejado, pesoMaximo, capacidadeCaminhao) {\n    let melhorComb = null;\n    let melhorLucro = 0;\n    function calcularCombinacao(combinacaoAtual, index) {\n      const combinacaoPeso = combinacaoAtual.reduce((total, item) => total + item.peso, 0);\n      const combinacaoVolume = combinacaoAtual.reduce((total, item) => total + item.volume, 0);\n      const combinacaoLucro = combinacaoAtual.reduce((total, item) => total + item.lucro, 0);\n      if (combinacaoPeso <= pesoMaximo && combinacaoVolume <= capacidadeCaminhao && combinacaoLucro > melhorLucro) {\n        melhorComb = combinacaoAtual.slice();\n        melhorLucro = combinacaoLucro;\n      }\n      for (let i = index + 1; i < objts.length; i++) {\n        calcularCombinacao(combinacaoAtual.concat(objts[i]), i);\n      }\n    }\n    for (let i = 0; i < objts.length; i++) {\n      calcularCombinacao([objts[i]], i);\n    }\n    return melhorComb.map(item => ({\n      nome: item.nome,\n      volume_t: item.volume.toFixed(),\n      peso_t: item.peso.toFixed(2),\n      custo_uni: item.custo.toFixed(2),\n      venda_uni: (item.custo + item.custo * (lucroDesejado / item.custo)).toFixed(2),\n      lucro_uni: (item.custo * (lucroDesejado / item.custo)).toFixed(2),\n      lucro_t: (item.custo * (lucroDesejado / item.custo) * item.qtde).toFixed(2),\n      qtde: item.qtde\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Simulacao\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"custom-cursor Simulacao-title\",\n      children: \"Simula\\xE7\\xE3o De Lucro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PriceWannaWin\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quanto de lucro deseja ganhar?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe o lucro desejado\",\n        value: lucroDesejado,\n        onChange: e => setLucroDesejado(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Peso m\\xE1ximo caminh\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe o peso m\\xE1ximo\",\n        value: pesoMaximo,\n        onChange: e => setPesoMaximo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Capacidade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe a capacidade do caminh\\xE3o\",\n        value: capacidadeCaminhao,\n        onChange: e => setCapacidadeCaminhao(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGerarPossibilidades,\n        children: \"Gerar Possibilidades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RespostaSimulacao, {\n      combinations: combinations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_s(Simulacao, \"1n0gHHpGrF/ggzEhEgKMuWYqgBo=\");\n_c = Simulacao;\nexport default Simulacao;\nvar _c;\n$RefreshReg$(_c, \"Simulacao\");","map":{"version":3,"names":["React","useEffect","useState","getFirestore","collection","getDocs","initializeApp","firebaseConfig","RespostaSimulacao","jsxDEV","_jsxDEV","Simulacao","_s","produtos","setProdutos","lucroDesejado","setLucroDesejado","pesoMaximo","setPesoMaximo","capacidadeCaminhao","setCapacidadeCaminhao","combinations","setCombinations","fetchProdutos","app","db","produtosRef","produtosSnapshot","produtosData","docs","map","doc","id","data","error","console","handleGerarPossibilidades","length","info_products","p","custo","parseFloat","PRECO_FINAL","nome","Nome","peso","Peso","volume","m3","resultadoCombinacoes","encherCaminhaoComUmProduto","objts","melhorComb","melhorLucro","calcularCombinacao","combinacaoAtual","index","combinacaoPeso","reduce","total","item","combinacaoVolume","combinacaoLucro","lucro","slice","i","concat","volume_t","toFixed","peso_t","custo_uni","venda_uni","lucro_uni","lucro_t","qtde","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Caiuã/Desktop/DEV - PATH/TRABALHO/cadastro-produtos-react/src/Simulacao.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\r\nimport { initializeApp } from 'firebase/app'; \r\nimport firebaseConfig from './Components/firebaseConfig'; \r\nimport RespostaSimulacao from './Components/RespostaSimulacao';\r\n\r\nfunction Simulacao() {\r\n    const [produtos, setProdutos] = useState([]);\r\n    const [lucroDesejado, setLucroDesejado] = useState('');\r\n    const [pesoMaximo, setPesoMaximo] = useState('');\r\n    const [capacidadeCaminhao, setCapacidadeCaminhao] = useState('');\r\n    const [combinations, setCombinations] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchProdutos = async () => {\r\n            try {\r\n                const app = initializeApp(firebaseConfig);\r\n                const db = getFirestore(app);\r\n                const produtosRef = collection(db, 'produtos');\r\n                const produtosSnapshot = await getDocs(produtosRef);\r\n                const produtosData = produtosSnapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }));\r\n                setProdutos(produtosData);\r\n            } catch (error) {\r\n                console.error('Erro ao buscar os produtos:', error);\r\n            }\r\n        };\r\n        fetchProdutos();\r\n    }, []); \r\n\r\n    const handleGerarPossibilidades = () => {\r\n        if (!lucroDesejado || !pesoMaximo || !capacidadeCaminhao) {\r\n            console.error('Preencha todos os campos antes de gerar as possibilidades.');\r\n            return;\r\n        }\r\n\r\n        if (!produtos || produtos.length === 0) {\r\n            console.error('Os produtos ainda estão sendo carregados ou não há produtos disponíveis. Por favor, aguarde e tente novamente.');\r\n            return;\r\n        }\r\n\r\n        const info_products = produtos.map(p => ({\r\n            custo: parseFloat(p.PRECO_FINAL),\r\n            nome: p.Nome,\r\n            peso: parseFloat(p.Peso),\r\n            volume: parseFloat(p.m3)\r\n        }));\r\n\r\n        const resultadoCombinacoes = encherCaminhaoComUmProduto(info_products, lucroDesejado, pesoMaximo, capacidadeCaminhao);\r\n        setCombinations(resultadoCombinacoes);\r\n    };\r\n\r\n    function encherCaminhaoComUmProduto(objts, lucroDesejado, pesoMaximo, capacidadeCaminhao) {\r\n        let melhorComb = null;\r\n        let melhorLucro = 0;\r\n\r\n        function calcularCombinacao(combinacaoAtual, index) {\r\n            const combinacaoPeso = combinacaoAtual.reduce((total, item) => total + item.peso, 0);\r\n            const combinacaoVolume = combinacaoAtual.reduce((total, item) => total + item.volume, 0);\r\n            const combinacaoLucro = combinacaoAtual.reduce((total, item) => total + item.lucro, 0);\r\n\r\n            if (combinacaoPeso <= pesoMaximo && combinacaoVolume <= capacidadeCaminhao && combinacaoLucro > melhorLucro) {\r\n                melhorComb = combinacaoAtual.slice();\r\n                melhorLucro = combinacaoLucro;\r\n            }\r\n\r\n            for (let i = index + 1; i < objts.length; i++) {\r\n                calcularCombinacao(combinacaoAtual.concat(objts[i]), i);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < objts.length; i++) {\r\n            calcularCombinacao([objts[i]], i);\r\n        }\r\n\r\n        return melhorComb.map(item => ({\r\n            nome: item.nome,\r\n            volume_t: item.volume.toFixed(),\r\n            peso_t: item.peso.toFixed(2),\r\n            custo_uni: (item.custo).toFixed(2),\r\n            venda_uni: ((item.custo) + ((item.custo) * (lucroDesejado / item.custo))).toFixed(2),\r\n            lucro_uni: (((item.custo) * (lucroDesejado / item.custo))).toFixed(2),\r\n            lucro_t: (((item.custo) * (lucroDesejado / item.custo)) * item.qtde).toFixed(2),\r\n            qtde: item.qtde\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div className='Simulacao'>\r\n            <h1 className='custom-cursor Simulacao-title'>Simulação De Lucro</h1>\r\n            <div className='PriceWannaWin'>\r\n                <h2>Quanto de lucro deseja ganhar?</h2>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o lucro desejado' \r\n                    value={lucroDesejado}\r\n                    onChange={(e) => setLucroDesejado(e.target.value)}\r\n                />\r\n                <h3>Peso máximo caminhão</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o peso máximo'\r\n                    value={pesoMaximo}\r\n                    onChange={(e) => setPesoMaximo(e.target.value)} \r\n                />\r\n                <h3>Capacidade</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe a capacidade do caminhão'\r\n                    value={capacidadeCaminhao}\r\n                    onChange={(e) => setCapacidadeCaminhao(e.target.value)} \r\n                />\r\n                <button onClick={handleGerarPossibilidades}>Gerar Possibilidades</button>\r\n            </div>\r\n            <RespostaSimulacao combinations={combinations} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Simulacao;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,UAAU,EAAEC,OAAO,QAAQ,oBAAoB;AACtE,SAASC,aAAa,QAAQ,cAAc;AAC5C,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,iBAAiB,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACZ,MAAMsB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACA,MAAMC,GAAG,GAAGlB,aAAa,CAACC,cAAc,CAAC;QACzC,MAAMkB,EAAE,GAAGtB,YAAY,CAACqB,GAAG,CAAC;QAC5B,MAAME,WAAW,GAAGtB,UAAU,CAACqB,EAAE,EAAE,UAAU,CAAC;QAC9C,MAAME,gBAAgB,GAAG,MAAMtB,OAAO,CAACqB,WAAW,CAAC;QACnD,MAAME,YAAY,GAAGD,gBAAgB,CAACE,IAAI,CAACC,GAAG,CAACC,GAAG,KAAK;UACnDC,EAAE,EAAED,GAAG,CAACC,EAAE;UACV,GAAGD,GAAG,CAACE,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC;QACHnB,WAAW,CAACc,YAAY,CAAC;MAC7B,CAAC,CAAC,OAAOM,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC;IACDX,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,yBAAyB,GAAGA,CAAA,KAAM;IACpC,IAAI,CAACrB,aAAa,IAAI,CAACE,UAAU,IAAI,CAACE,kBAAkB,EAAE;MACtDgB,OAAO,CAACD,KAAK,CAAC,4DAA4D,CAAC;MAC3E;IACJ;IAEA,IAAI,CAACrB,QAAQ,IAAIA,QAAQ,CAACwB,MAAM,KAAK,CAAC,EAAE;MACpCF,OAAO,CAACD,KAAK,CAAC,gHAAgH,CAAC;MAC/H;IACJ;IAEA,MAAMI,aAAa,GAAGzB,QAAQ,CAACiB,GAAG,CAACS,CAAC,KAAK;MACrCC,KAAK,EAAEC,UAAU,CAACF,CAAC,CAACG,WAAW,CAAC;MAChCC,IAAI,EAAEJ,CAAC,CAACK,IAAI;MACZC,IAAI,EAAEJ,UAAU,CAACF,CAAC,CAACO,IAAI,CAAC;MACxBC,MAAM,EAAEN,UAAU,CAACF,CAAC,CAACS,EAAE;IAC3B,CAAC,CAAC,CAAC;IAEH,MAAMC,oBAAoB,GAAGC,0BAA0B,CAACZ,aAAa,EAAEvB,aAAa,EAAEE,UAAU,EAAEE,kBAAkB,CAAC;IACrHG,eAAe,CAAC2B,oBAAoB,CAAC;EACzC,CAAC;EAED,SAASC,0BAA0BA,CAACC,KAAK,EAAEpC,aAAa,EAAEE,UAAU,EAAEE,kBAAkB,EAAE;IACtF,IAAIiC,UAAU,GAAG,IAAI;IACrB,IAAIC,WAAW,GAAG,CAAC;IAEnB,SAASC,kBAAkBA,CAACC,eAAe,EAAEC,KAAK,EAAE;MAChD,MAAMC,cAAc,GAAGF,eAAe,CAACG,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAGC,IAAI,CAACf,IAAI,EAAE,CAAC,CAAC;MACpF,MAAMgB,gBAAgB,GAAGN,eAAe,CAACG,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAGC,IAAI,CAACb,MAAM,EAAE,CAAC,CAAC;MACxF,MAAMe,eAAe,GAAGP,eAAe,CAACG,MAAM,CAAC,CAACC,KAAK,EAAEC,IAAI,KAAKD,KAAK,GAAGC,IAAI,CAACG,KAAK,EAAE,CAAC,CAAC;MAEtF,IAAIN,cAAc,IAAIxC,UAAU,IAAI4C,gBAAgB,IAAI1C,kBAAkB,IAAI2C,eAAe,GAAGT,WAAW,EAAE;QACzGD,UAAU,GAAGG,eAAe,CAACS,KAAK,CAAC,CAAC;QACpCX,WAAW,GAAGS,eAAe;MACjC;MAEA,KAAK,IAAIG,CAAC,GAAGT,KAAK,GAAG,CAAC,EAAES,CAAC,GAAGd,KAAK,CAACd,MAAM,EAAE4B,CAAC,EAAE,EAAE;QAC3CX,kBAAkB,CAACC,eAAe,CAACW,MAAM,CAACf,KAAK,CAACc,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC;MAC3D;IACJ;IAEA,KAAK,IAAIA,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGd,KAAK,CAACd,MAAM,EAAE4B,CAAC,EAAE,EAAE;MACnCX,kBAAkB,CAAC,CAACH,KAAK,CAACc,CAAC,CAAC,CAAC,EAAEA,CAAC,CAAC;IACrC;IAEA,OAAOb,UAAU,CAACtB,GAAG,CAAC8B,IAAI,KAAK;MAC3BjB,IAAI,EAAEiB,IAAI,CAACjB,IAAI;MACfwB,QAAQ,EAAEP,IAAI,CAACb,MAAM,CAACqB,OAAO,CAAC,CAAC;MAC/BC,MAAM,EAAET,IAAI,CAACf,IAAI,CAACuB,OAAO,CAAC,CAAC,CAAC;MAC5BE,SAAS,EAAGV,IAAI,CAACpB,KAAK,CAAE4B,OAAO,CAAC,CAAC,CAAC;MAClCG,SAAS,EAAE,CAAEX,IAAI,CAACpB,KAAK,GAAMoB,IAAI,CAACpB,KAAK,IAAKzB,aAAa,GAAG6C,IAAI,CAACpB,KAAK,CAAE,EAAE4B,OAAO,CAAC,CAAC,CAAC;MACpFI,SAAS,EAAE,CAAGZ,IAAI,CAACpB,KAAK,IAAKzB,aAAa,GAAG6C,IAAI,CAACpB,KAAK,CAAC,EAAG4B,OAAO,CAAC,CAAC,CAAC;MACrEK,OAAO,EAAE,CAAGb,IAAI,CAACpB,KAAK,IAAKzB,aAAa,GAAG6C,IAAI,CAACpB,KAAK,CAAC,GAAIoB,IAAI,CAACc,IAAI,EAAEN,OAAO,CAAC,CAAC,CAAC;MAC/EM,IAAI,EAAEd,IAAI,CAACc;IACf,CAAC,CAAC,CAAC;EACP;EAEA,oBACIhE,OAAA;IAAKiE,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBlE,OAAA;MAAIiE,SAAS,EAAC,+BAA+B;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrEtE,OAAA;MAAKiE,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1BlE,OAAA;QAAAkE,QAAA,EAAI;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvCtE,OAAA;QACIuE,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,0BAA0B;QACtCC,KAAK,EAAEpE,aAAc;QACrBqE,QAAQ,EAAGC,CAAC,IAAKrE,gBAAgB,CAACqE,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACFtE,OAAA;QAAAkE,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7BtE,OAAA;QACIuE,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,0BAAuB;QACnCC,KAAK,EAAElE,UAAW;QAClBmE,QAAQ,EAAGC,CAAC,IAAKnE,aAAa,CAACmE,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACFtE,OAAA;QAAAkE,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBtE,OAAA;QACIuE,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,qCAAkC;QAC9CC,KAAK,EAAEhE,kBAAmB;QAC1BiE,QAAQ,EAAGC,CAAC,IAAKjE,qBAAqB,CAACiE,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,eACFtE,OAAA;QAAQ6E,OAAO,EAAEnD,yBAA0B;QAAAwC,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC,eACNtE,OAAA,CAACF,iBAAiB;MAACa,YAAY,EAAEA;IAAa;MAAAwD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEd;AAACpE,EAAA,CAjHQD,SAAS;AAAA6E,EAAA,GAAT7E,SAAS;AAmHlB,eAAeA,SAAS;AAAC,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}