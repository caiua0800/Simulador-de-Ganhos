{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caiu\\xE3\\\\Desktop\\\\DEV - PATH\\\\TRABALHO\\\\cadastro-produtos-react\\\\src\\\\Simulacao.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\nimport { initializeApp } from 'firebase/app';\nimport firebaseConfig from './Components/firebaseConfig';\nimport RespostaSimulacao from './Components/RespostaSimulacao';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Simulacao() {\n  _s();\n  const [produtos, setProdutos] = useState([]);\n  const [lucroDesejado, setLucroDesejado] = useState('');\n  const [capacidade, setCapacidade] = useState('');\n  const [VolumeCaminhao, setVolumeCaminhao] = useState('');\n  const [Frete, setFrete] = useState('');\n  const [maximoLucroUni, setMaximoLucroUni] = useState('');\n  const [combinations, setCombinations] = useState([]);\n  useEffect(() => {\n    const fetchProdutos = async () => {\n      try {\n        const app = initializeApp(firebaseConfig);\n        const db = getFirestore(app);\n        const produtosRef = collection(db, 'produtos');\n        const produtosSnapshot = await getDocs(produtosRef);\n        const produtosData = produtosSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setProdutos(produtosData);\n      } catch (error) {\n        console.error('Erro ao buscar os produtos:', error);\n      }\n    };\n    fetchProdutos();\n  }, []);\n  const handleGerarPossibilidades = () => {\n    const info_products = produtos.map(p => ({\n      custo: parseFloat(p.PRECO_FINAL),\n      nome: p.Nome,\n      peso: parseFloat(p.Peso),\n      volume: parseFloat(p.m3)\n    }));\n    let TODAS_AS_COMBINACOES = new Set();\n    let tentativas = 0;\n    while (TODAS_AS_COMBINACOES.size < 100 && tentativas < 2500) {\n      let combinacao2 = encherCaminhao(info_products);\n      if (combinacao2) {\n        TODAS_AS_COMBINACOES.add(JSON.stringify(combinacao2));\n      }\n      tentativas++;\n    }\n    let masterCombinacoes = [];\n    Array.from(TODAS_AS_COMBINACOES).map(comb => {\n      masterCombinacoes.push(JSON.parse(comb));\n    });\n    setCombinations(masterCombinacoes);\n  };\n\n  // useEffect(() => {\n  //     console.log(combinations);\n  // }, [combinations]);\n\n  function encherCaminhao(objects) {\n    let random_nums = [];\n    for (let i = 0; i < 6; i++) {\n      random_nums[i] = Math.floor(Math.random() * objects.length);\n    }\n    let aparicoes = contarPorcentagens(random_nums, objects.length);\n    let chaves = Object.keys(aparicoes);\n    let combinacao = [];\n\n    //enchendo com um produto\n\n    //fim\n\n    for (let chave of chaves) {\n      let percentual = aparicoes[chave];\n      let produto = objects[chave];\n      if (produto.volume === 0) console.log(produto.nome);\n      let qtde = parseFloat(parseInt(VolumeCaminhao) / parseFloat(produto.volume) * percentual);\n      if (!isNaN(qtde) || isFinite(qtde)) {\n        let comb = {\n          nome: produto.nome,\n          aparicao: percentual,\n          qtde: parseInt(qtde),\n          peso: parseFloat((qtde * produto.peso).toFixed(2)),\n          peso_unitario: produto.peso,\n          volume_unitario: parseFloat(produto.volume.toFixed(2)),\n          volume: parseFloat((produto.volume * qtde).toFixed(4)),\n          custoUnitario: produto.custo,\n          vendaUnitario: parseFloat((produto.custo / (lucroDesejado * percentual) * produto.custo + produto.custo).toFixed(2)),\n          lucroUnitario: parseFloat((produto.custo / (lucroDesejado * percentual) * produto.custo).toFixed(2)),\n          lucroTotal: parseFloat((produto.custo / (lucroDesejado * percentual) * produto.custo * qtde).toFixed(2))\n        };\n        if (isFinite(comb.qtde) && !isNaN(comb.qtde) && isFinite(comb.peso) && !isNaN(comb.peso)) if (parseFloat(comb.lucroUnitario) <= parseFloat(maximoLucroUni)) {\n          combinacao.push(comb);\n        }\n      }\n    }\n    let somaPesos = 0;\n    combinacao.forEach(comb => {\n      somaPesos += parseFloat(comb.peso);\n    });\n    let somaVolume = 0;\n    combinacao.forEach(comb => {\n      somaVolume += parseFloat(comb.volume);\n    });\n    let somaLucro = 0;\n    combinacao.forEach(comb => {\n      if (!isNaN(comb.lucroUnitario)) {\n        somaLucro += comb.lucroUnitario * comb.qtde;\n      }\n    });\n    let somaCusto = 0;\n    combinacao.forEach(comb => {\n      if (!isNaN(comb.custoUnitario)) {\n        somaCusto += comb.custoUnitario * comb.qtde;\n      }\n    });\n    let pesoMax = parseFloat(VolumeCaminhao) * parseFloat(capacidade);\n    if (somaPesos < pesoMax - pesoMax * 0.05 && somaVolume >= VolumeCaminhao * 0.8 && somaVolume <= VolumeCaminhao) {\n      if (somaLucro > lucroDesejado - lucroDesejado * 0.01 && somaLucro < lucroDesejado + lucroDesejado * 0.05) {\n        combinacao.push({\n          SOMA_LUCRO: somaLucro\n        });\n        combinacao.push({\n          SOMA_CUSTO: somaCusto\n        });\n        combinacao.push({\n          SOMA_VOLUME: somaVolume\n        });\n        combinacao.push({\n          SOMA_PESO: somaPesos\n        });\n        return combinacao;\n      }\n    } else {\n      combinacao.push(somaLucro);\n    }\n  }\n  function contarPorcentagens(vetor, tamanhoTotal) {\n    var contagem = {};\n    for (var i = 0; i < vetor.length; i++) {\n      var numero = vetor[i];\n      if (contagem[numero]) contagem[numero]++;else contagem[numero] = 1;\n    }\n    for (var numero in contagem) contagem[numero] = contagem[numero] / tamanhoTotal;\n    return contagem;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Simulacao\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"custom-cursor Simulacao-title\",\n      children: \"Simula\\xE7\\xE3o De Lucro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PriceWannaWin\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quanto de lucro deseja ganhar?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe o lucro desejado\",\n        value: lucroDesejado,\n        onChange: e => setLucroDesejado(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Capacidade de peso por metros cubicos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe o peso m\\xE1ximo\",\n        value: capacidade,\n        onChange: e => setCapacidade(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Capacidade em metros cubicos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe a capacidade do caminh\\xE3o\",\n        value: VolumeCaminhao,\n        onChange: e => setVolumeCaminhao(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Frete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe a capacidade do caminh\\xE3o\",\n        value: Frete,\n        onChange: e => setFrete(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"M\\xE1ximo de lucro sobre produto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe a capacidade do caminh\\xE3o\",\n        value: maximoLucroUni,\n        onChange: e => setMaximoLucroUni(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGerarPossibilidades,\n        children: \"Gerar Possibilidades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RespostaSimulacao, {\n      frete: Frete,\n      combinations: combinations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 9\n  }, this);\n}\n_s(Simulacao, \"hSHW85OxfrUetLw+9fxminJpVBY=\");\n_c = Simulacao;\nexport default Simulacao;\nvar _c;\n$RefreshReg$(_c, \"Simulacao\");","map":{"version":3,"names":["React","useEffect","useState","getFirestore","collection","getDocs","initializeApp","firebaseConfig","RespostaSimulacao","jsxDEV","_jsxDEV","Simulacao","_s","produtos","setProdutos","lucroDesejado","setLucroDesejado","capacidade","setCapacidade","VolumeCaminhao","setVolumeCaminhao","Frete","setFrete","maximoLucroUni","setMaximoLucroUni","combinations","setCombinations","fetchProdutos","app","db","produtosRef","produtosSnapshot","produtosData","docs","map","doc","id","data","error","console","handleGerarPossibilidades","info_products","p","custo","parseFloat","PRECO_FINAL","nome","Nome","peso","Peso","volume","m3","TODAS_AS_COMBINACOES","Set","tentativas","size","combinacao2","encherCaminhao","add","JSON","stringify","masterCombinacoes","Array","from","comb","push","parse","objects","random_nums","i","Math","floor","random","length","aparicoes","contarPorcentagens","chaves","Object","keys","combinacao","chave","percentual","produto","log","qtde","parseInt","isNaN","isFinite","aparicao","toFixed","peso_unitario","volume_unitario","custoUnitario","vendaUnitario","lucroUnitario","lucroTotal","somaPesos","forEach","somaVolume","somaLucro","somaCusto","pesoMax","SOMA_LUCRO","SOMA_CUSTO","SOMA_VOLUME","SOMA_PESO","vetor","tamanhoTotal","contagem","numero","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","frete","_c","$RefreshReg$"],"sources":["C:/Users/Caiuã/Desktop/DEV - PATH/TRABALHO/cadastro-produtos-react/src/Simulacao.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\r\nimport { initializeApp } from 'firebase/app'; \r\nimport firebaseConfig from './Components/firebaseConfig'; \r\nimport RespostaSimulacao from './Components/RespostaSimulacao';\r\n\r\nfunction Simulacao() {\r\n    const [produtos, setProdutos] = useState([]);\r\n    const [lucroDesejado, setLucroDesejado] = useState('');\r\n    const [capacidade, setCapacidade] = useState('');\r\n    const [VolumeCaminhao, setVolumeCaminhao] = useState('');\r\n    const [Frete, setFrete] = useState('');\r\n    const [maximoLucroUni, setMaximoLucroUni] = useState('');\r\n    const [combinations, setCombinations] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchProdutos = async () => {\r\n            try {\r\n                const app = initializeApp(firebaseConfig);\r\n                const db = getFirestore(app);\r\n                const produtosRef = collection(db, 'produtos');\r\n                const produtosSnapshot = await getDocs(produtosRef);\r\n                const produtosData = produtosSnapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }));\r\n                setProdutos(produtosData);\r\n            } catch (error) {\r\n                console.error('Erro ao buscar os produtos:', error);\r\n            }\r\n        };\r\n        fetchProdutos();\r\n    }, []); \r\n\r\n    const handleGerarPossibilidades = () => {\r\n        const info_products = produtos.map(p => ({\r\n            custo: parseFloat(p.PRECO_FINAL),\r\n            nome: p.Nome,\r\n            peso: parseFloat(p.Peso),\r\n            volume: parseFloat(p.m3)\r\n        }));\r\n    \r\n        let TODAS_AS_COMBINACOES = new Set();\r\n        let tentativas = 0;\r\n        \r\n        while (TODAS_AS_COMBINACOES.size < 100 && tentativas < 2500) {\r\n            let combinacao2 = encherCaminhao(info_products);\r\n            if (combinacao2) {\r\n                TODAS_AS_COMBINACOES.add(JSON.stringify(combinacao2));\r\n            }\r\n            tentativas++;\r\n        }\r\n\r\n        let masterCombinacoes = [];\r\n        Array.from(TODAS_AS_COMBINACOES).map(comb =>{\r\n            masterCombinacoes.push(JSON.parse(comb))\r\n        });\r\n\r\n        setCombinations(masterCombinacoes)\r\n\r\n    };\r\n\r\n\r\n    // useEffect(() => {\r\n    //     console.log(combinations);\r\n    // }, [combinations]);\r\n\r\n    function encherCaminhao(objects){\r\n        let random_nums = []\r\n        for(let i = 0; i < 6; i++){\r\n            random_nums[i] = Math.floor(Math.random() * objects.length);\r\n        }\r\n\r\n\r\n        let aparicoes = contarPorcentagens(random_nums, objects.length);\r\n\r\n        let chaves = Object.keys(aparicoes);\r\n\r\n        let combinacao = []\r\n\r\n\r\n\r\n\r\n        //enchendo com um produto\r\n\r\n        //fim\r\n    \r\n\r\n        for(let chave of chaves){\r\n\r\n            let percentual = aparicoes[chave];\r\n            let produto = objects[chave];\r\n\r\n            if(produto.volume === 0)\r\n                console.log(produto.nome)\r\n\r\n            let qtde = parseFloat((parseInt(VolumeCaminhao)/parseFloat(produto.volume)) * percentual);\r\n\r\n            if(!isNaN(qtde) || isFinite(qtde)){\r\n                let comb = {\r\n                    nome: produto.nome,\r\n                    aparicao: percentual,\r\n                    qtde: parseInt(qtde),\r\n                    peso: parseFloat((qtde * produto.peso).toFixed(2)),\r\n                    peso_unitario: produto.peso,\r\n                    volume_unitario: parseFloat(produto.volume.toFixed(2)),\r\n                    volume: parseFloat((produto.volume * qtde).toFixed(4)),\r\n                    custoUnitario: produto.custo,\r\n                    vendaUnitario: parseFloat(((((produto.custo) / (lucroDesejado * percentual))* produto.custo) + produto.custo).toFixed(2)),\r\n                    lucroUnitario: parseFloat((((produto.custo) / (lucroDesejado * percentual))* produto.custo).toFixed(2)),\r\n                    lucroTotal: parseFloat(((((produto.custo) / (lucroDesejado * percentual))* produto.custo) * qtde).toFixed(2)),\r\n                }\r\n    \r\n    \r\n                if(isFinite(comb.qtde) && !isNaN(comb.qtde) && isFinite(comb.peso) && !isNaN(comb.peso))\r\n                    if(parseFloat(comb.lucroUnitario) <= parseFloat(maximoLucroUni)){\r\n                        combinacao.push(comb)\r\n                    }\r\n            }\r\n           \r\n        }\r\n    \r\n        let somaPesos = 0;\r\n        combinacao.forEach(comb => {\r\n            somaPesos += parseFloat(comb.peso)\r\n        })\r\n    \r\n        let somaVolume = 0;\r\n        combinacao.forEach(comb => {\r\n            somaVolume += parseFloat(comb.volume)\r\n        })\r\n    \r\n        let somaLucro = 0;\r\n        combinacao.forEach(comb => {\r\n            if (!isNaN(comb.lucroUnitario)) {\r\n                somaLucro += (comb.lucroUnitario * comb.qtde);\r\n            }\r\n        });\r\n\r\n        let somaCusto = 0;\r\n        combinacao.forEach(comb => {\r\n            if (!isNaN(comb.custoUnitario)) {\r\n                somaCusto += (comb.custoUnitario * comb.qtde);\r\n            }\r\n        });\r\n\r\n    \r\n        \r\n        let pesoMax = parseFloat(VolumeCaminhao)*parseFloat(capacidade)\r\n    \r\n        if(somaPesos < (pesoMax - (pesoMax * 0.05)) && somaVolume >= VolumeCaminhao*0.8 && somaVolume <= VolumeCaminhao){\r\n            if(somaLucro > (lucroDesejado - (lucroDesejado * 0.01)) && somaLucro < (lucroDesejado + (lucroDesejado * 0.05)) ){\r\n                combinacao.push({SOMA_LUCRO:somaLucro})\r\n                combinacao.push({SOMA_CUSTO:somaCusto})\r\n                combinacao.push({SOMA_VOLUME:somaVolume})\r\n                combinacao.push({SOMA_PESO:somaPesos})\r\n                return combinacao;\r\n            }\r\n        }else{\r\n            combinacao.push(somaLucro)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    function contarPorcentagens(vetor, tamanhoTotal) {\r\n        var contagem = {};\r\n\r\n        for (var i = 0; i < vetor.length; i++) {\r\n            var numero = vetor[i];\r\n\r\n            if (contagem[numero]) \r\n                contagem[numero]++;\r\n            else \r\n                contagem[numero] = 1;\r\n        }\r\n    \r\n        for (var numero in contagem) \r\n            contagem[numero] = (contagem[numero] / tamanhoTotal);\r\n        return contagem;\r\n    }\r\n    \r\n    return (\r\n        <div className='Simulacao'>\r\n            <h1 className='custom-cursor Simulacao-title'>Simulação De Lucro</h1>\r\n            <div className='PriceWannaWin'>\r\n                <h2>Quanto de lucro deseja ganhar?</h2>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o lucro desejado' \r\n                    value={lucroDesejado}\r\n                    onChange={(e) => setLucroDesejado(e.target.value)}\r\n                />\r\n                <h3>Capacidade de peso por metros cubicos</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o peso máximo'\r\n                    value={capacidade}\r\n                    onChange={(e) => setCapacidade(e.target.value)} \r\n                />\r\n                <h3>Capacidade em metros cubicos</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe a capacidade do caminhão'\r\n                    value={VolumeCaminhao}\r\n                    onChange={(e) => setVolumeCaminhao(e.target.value)} \r\n                />\r\n                <h3>Frete</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe a capacidade do caminhão'\r\n                    value={Frete}\r\n                    onChange={(e) => setFrete(e.target.value)} \r\n                />\r\n                <h3>Máximo de lucro sobre produto</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe a capacidade do caminhão'\r\n                    value={maximoLucroUni}\r\n                    onChange={(e) => setMaximoLucroUni(e.target.value)} \r\n                />\r\n                <button onClick={handleGerarPossibilidades}>Gerar Possibilidades</button>\r\n            </div>\r\n            <RespostaSimulacao frete={Frete} combinations={combinations} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Simulacao;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}