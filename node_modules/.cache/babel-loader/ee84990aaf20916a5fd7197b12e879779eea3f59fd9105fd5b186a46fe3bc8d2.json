{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caiu\\xE3\\\\Desktop\\\\DEV - PATH\\\\TRABALHO\\\\cadastro-produtos-react\\\\src\\\\Simulacao.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\nimport { initializeApp } from 'firebase/app';\nimport firebaseConfig from './Components/firebaseConfig';\nimport RespostaSimulacao from './Components/RespostaSimulacao';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Simulacao() {\n  _s();\n  const [produtos, setProdutos] = useState([]);\n  const [lucroDesejado, setLucroDesejado] = useState('');\n  const [pesoMaximo, setPesoMaximo] = useState('');\n  const [capacidadeCaminhao, setCapacidadeCaminhao] = useState('');\n  const [combinations, setCombinations] = useState([]);\n  useEffect(() => {\n    const fetchProdutos = async () => {\n      try {\n        const app = initializeApp(firebaseConfig);\n        const db = getFirestore(app);\n        const produtosRef = collection(db, 'produtos');\n        const produtosSnapshot = await getDocs(produtosRef);\n        const produtosData = produtosSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setProdutos(produtosData);\n\n        // Após carregar os produtos, chame a função para gerar as possibilidades\n        if (lucroDesejado && pesoMaximo && capacidadeCaminhao) {\n          const resultadoCombinacoes = encherCaminhaoComUmProduto(produtosData);\n          console.log(\"Combinacoes:\", resultadoCombinacoes);\n          setCombinations(resultadoCombinacoes);\n        }\n      } catch (error) {\n        console.error('Erro ao buscar os produtos:', error);\n      }\n    };\n    fetchProdutos();\n  }, [lucroDesejado, pesoMaximo, capacidadeCaminhao]);\n  function encherCaminhaoComUmProduto(objts) {\n    let melhorComb = null;\n    let melhorLucro = 0;\n    function calcularCombinacao(combinacaoAtual, index) {\n      const combinacaoPeso = combinacaoAtual.reduce((total, item) => total + item.peso, 0);\n      const combinacaoVolume = combinacaoAtual.reduce((total, item) => total + item.volume, 0);\n      const combinacaoLucro = combinacaoAtual.reduce((total, item) => total + item.lucro, 0);\n      if (combinacaoPeso <= pesoMaximo && combinacaoVolume <= capacidadeCaminhao && combinacaoLucro > melhorLucro) {\n        melhorComb = combinacaoAtual.slice();\n        melhorLucro = combinacaoLucro;\n      }\n      for (let i = index + 1; i < objts.length; i++) {\n        calcularCombinacao(combinacaoAtual.concat(objts[i]), i);\n      }\n    }\n    for (let i = 0; i < objts.length; i++) {\n      calcularCombinacao([objts[i]], i);\n    }\n    return melhorComb.map(item => ({\n      nome: item.nome,\n      volume_t: item.volume.toFixed(),\n      peso_t: item.peso.toFixed(2),\n      custo_uni: item.custo.toFixed(2),\n      venda_uni: (item.custo + item.custo * (lucroDesejado / item.custo)).toFixed(2),\n      lucro_uni: (item.custo * (lucroDesejado / item.custo)).toFixed(2),\n      lucro_t: (item.custo * (lucroDesejado / item.custo) * item.qtde).toFixed(2),\n      qtde: item.qtde\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Simulacao\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"custom-cursor Simulacao-title\",\n      children: \"Simula\\xE7\\xE3o De Lucro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PriceWannaWin\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quanto de lucro deseja ganhar?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe o lucro desejado\",\n        value: lucroDesejado,\n        onChange: e => setLucroDesejado(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Peso m\\xE1ximo caminh\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe o peso m\\xE1ximo\",\n        value: pesoMaximo,\n        onChange: e => setPesoMaximo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Capacidade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe a capacidade do caminh\\xE3o\",\n        value: capacidadeCaminhao,\n        onChange: e => setCapacidadeCaminhao(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RespostaSimulacao, {\n      combinations: combinations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(Simulacao, \"1n0gHHpGrF/ggzEhEgKMuWYqgBo=\");\n_c = Simulacao;\nexport default Simulacao;\nvar _c;\n$RefreshReg$(_c, \"Simulacao\");","map":{"version":3,"names":["React","useEffect","useState","getFirestore","collection","getDocs","initializeApp","firebaseConfig","RespostaSimulacao","jsxDEV","_jsxDEV","Simulacao","_s","produtos","setProdutos","lucroDesejado","setLucroDesejado","pesoMaximo","setPesoMaximo","capacidadeCaminhao","setCapacidadeCaminhao","combinations","setCombinations","fetchProdutos","app","db","produtosRef","produtosSnapshot","produtosData","docs","map","doc","id","data","resultadoCombinacoes","encherCaminhaoComUmProduto","console","log","error","objts","melhorComb","melhorLucro","calcularCombinacao","combinacaoAtual","index","combinacaoPeso","reduce","total","item","peso","combinacaoVolume","volume","combinacaoLucro","lucro","slice","i","length","concat","nome","volume_t","toFixed","peso_t","custo_uni","custo","venda_uni","lucro_uni","lucro_t","qtde","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Caiuã/Desktop/DEV - PATH/TRABALHO/cadastro-produtos-react/src/Simulacao.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\r\nimport { initializeApp } from 'firebase/app'; \r\nimport firebaseConfig from './Components/firebaseConfig'; \r\nimport RespostaSimulacao from './Components/RespostaSimulacao';\r\n\r\nfunction Simulacao() {\r\n    const [produtos, setProdutos] = useState([]);\r\n    const [lucroDesejado, setLucroDesejado] = useState('');\r\n    const [pesoMaximo, setPesoMaximo] = useState('');\r\n    const [capacidadeCaminhao, setCapacidadeCaminhao] = useState('');\r\n    const [combinations, setCombinations] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchProdutos = async () => {\r\n            try {\r\n                const app = initializeApp(firebaseConfig);\r\n                const db = getFirestore(app);\r\n                const produtosRef = collection(db, 'produtos');\r\n                const produtosSnapshot = await getDocs(produtosRef);\r\n                const produtosData = produtosSnapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }));\r\n                setProdutos(produtosData);\r\n\r\n                // Após carregar os produtos, chame a função para gerar as possibilidades\r\n                if (lucroDesejado && pesoMaximo && capacidadeCaminhao) {\r\n                    const resultadoCombinacoes = encherCaminhaoComUmProduto(produtosData);\r\n                    console.log(\"Combinacoes:\", resultadoCombinacoes);\r\n                    setCombinations(resultadoCombinacoes);\r\n                }\r\n            } catch (error) {\r\n                console.error('Erro ao buscar os produtos:', error);\r\n            }\r\n        };\r\n        fetchProdutos();\r\n    }, [lucroDesejado, pesoMaximo, capacidadeCaminhao]); \r\n\r\n    function encherCaminhaoComUmProduto(objts) {\r\n        let melhorComb = null;\r\n        let melhorLucro = 0;\r\n\r\n        function calcularCombinacao(combinacaoAtual, index) {\r\n            const combinacaoPeso = combinacaoAtual.reduce((total, item) => total + item.peso, 0);\r\n            const combinacaoVolume = combinacaoAtual.reduce((total, item) => total + item.volume, 0);\r\n            const combinacaoLucro = combinacaoAtual.reduce((total, item) => total + item.lucro, 0);\r\n\r\n            if (combinacaoPeso <= pesoMaximo && combinacaoVolume <= capacidadeCaminhao && combinacaoLucro > melhorLucro) {\r\n                melhorComb = combinacaoAtual.slice();\r\n                melhorLucro = combinacaoLucro;\r\n            }\r\n\r\n            for (let i = index + 1; i < objts.length; i++) {\r\n                calcularCombinacao(combinacaoAtual.concat(objts[i]), i);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < objts.length; i++) {\r\n            calcularCombinacao([objts[i]], i);\r\n        }\r\n\r\n        return melhorComb.map(item => ({\r\n            nome: item.nome,\r\n            volume_t: item.volume.toFixed(),\r\n            peso_t: item.peso.toFixed(2),\r\n            custo_uni: (item.custo).toFixed(2),\r\n            venda_uni: ((item.custo) + ((item.custo) * (lucroDesejado / item.custo))).toFixed(2),\r\n            lucro_uni: (((item.custo) * (lucroDesejado / item.custo))).toFixed(2),\r\n            lucro_t: (((item.custo) * (lucroDesejado / item.custo)) * item.qtde).toFixed(2),\r\n            qtde: item.qtde\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div className='Simulacao'>\r\n            <h1 className='custom-cursor Simulacao-title'>Simulação De Lucro</h1>\r\n            <div className='PriceWannaWin'>\r\n                <h2>Quanto de lucro deseja ganhar?</h2>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o lucro desejado' \r\n                    value={lucroDesejado}\r\n                    onChange={(e) => setLucroDesejado(e.target.value)}\r\n                />\r\n                <h3>Peso máximo caminhão</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o peso máximo'\r\n                    value={pesoMaximo}\r\n                    onChange={(e) => setPesoMaximo(e.target.value)} \r\n                />\r\n                <h3>Capacidade</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe a capacidade do caminhão'\r\n                    value={capacidadeCaminhao}\r\n                    onChange={(e) => setCapacidadeCaminhao(e.target.value)} \r\n                />\r\n            </div>\r\n            <RespostaSimulacao combinations={combinations} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Simulacao;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}