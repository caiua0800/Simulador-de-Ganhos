{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caiu\\xE3\\\\Desktop\\\\DEV - PATH\\\\TRABALHO\\\\cadastro-produtos-react\\\\src\\\\Simulacao.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\nimport { initializeApp } from 'firebase/app';\nimport firebaseConfig from './Components/firebaseConfig';\nimport RespostaSimulacao from './Components/RespostaSimulacao';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Simulacao() {\n  _s();\n  const [produtos, setProdutos] = useState([]);\n  const [lucroDesejado, setLucroDesejado] = useState('');\n  const [capacidade, setCapacidade] = useState('');\n  const [VolumeCaminhao, setVolumeCaminhao] = useState('');\n  const [Frete, setFrete] = useState('');\n  const [maximoLucroUni, setMaximoLucroUni] = useState('');\n  const [combinations, setCombinations] = useState([]);\n  const [combinacaoUnica, setcombinacaoUnica] = useState([]);\n  useEffect(() => {\n    const fetchProdutos = async () => {\n      try {\n        const app = initializeApp(firebaseConfig);\n        const db = getFirestore(app);\n        const produtosRef = collection(db, 'produtos');\n        const produtosSnapshot = await getDocs(produtosRef);\n        const produtosData = produtosSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setProdutos(produtosData);\n      } catch (error) {\n        console.error('Erro ao buscar os produtos:', error);\n      }\n    };\n    fetchProdutos();\n  }, []);\n  const handleGerarPossibilidades = () => {\n    const info_products = produtos.map(p => ({\n      custo: parseFloat(p.PRECO_FINAL),\n      nome: p.Nome,\n      peso: parseFloat(p.Peso),\n      volume: parseFloat(p.m3)\n    }));\n    let TODAS_AS_COMBINACOES = new Set();\n    let tentativas = 0;\n    let combsUnicas = [];\n    info_products.forEach(produto => {\n      let qtde = parseInt(parseInt(VolumeCaminhao) / produto.volume);\n      let peso_atual = 0;\n      if (qtde * produto.peso < parseInt(VolumeCaminhao) * parseInt(capacidade)) {\n        let comb = {\n          nome: produto.nome,\n          qtde: qtde,\n          peso: parseInt((qtde * parseFloat(produto.peso)).toFixed(2)),\n          peso_unitario: produto.peso,\n          volume_unitario: parseFloat(produto.volume.toFixed(2)),\n          volume: parseFloat((produto.volume * qtde).toFixed(4)),\n          custoUnitario: produto.custo,\n          vendaUnitario: parseFloat((lucroDesejado / (produto.custo * qtde + parseInt(Frete)) * produto.custo + produto.custo).toFixed(2)),\n          lucroUnitario: parseFloat((lucroDesejado / (produto.custo * qtde + parseInt(Frete)) * produto.custo).toFixed(2)),\n          lucroTotal: parseFloat((lucroDesejado / (produto.custo * qtde + parseInt(Frete)) * produto.custo * qtde).toFixed(2))\n        };\n        let lucroEmCima = comb.vendaUnitario / comb.custoUnitario * 100;\n        if (lucroEmCima < parseInt(maximoLucroUni)) combsUnicas.push(comb);\n      }\n    });\n    setcombinacaoUnica(combsUnicas);\n\n    // while (TODAS_AS_COMBINACOES.size < 100 && tentativas < 2500) {\n    //     let combinacao2 = encherCaminhao(info_products);\n    //     if (combinacao2) {\n    //         TODAS_AS_COMBINACOES.add(JSON.stringify(combinacao2));\n    //     }\n    //     tentativas++;\n    // }\n\n    // let masterCombinacoes = [];\n    // Array.from(TODAS_AS_COMBINACOES).map(comb =>{\n    //     masterCombinacoes.push(JSON.parse(comb))\n    // });\n\n    // setCombinations(masterCombinacoes)\n\n    let indice = 0;\n    let array = [];\n    let comb_array = [];\n    while (indice < info_products.length) {\n      if (array.length === 4) {\n        comb_array.push(array);\n        array = [];\n        console.log(comb_array);\n      }\n      array.push(encherCaminhao(info_products, indice));\n      indice++;\n    }\n  };\n  function encherCaminhao(objects, i) {\n    function compararPorCusto(a, b) {\n      return a.custo - b.custo;\n    }\n    function adicionarAoArray(array, i, n) {\n      for (let y = 0; y < n; y++) {\n        objects[i + y].custo = parseFloat(objects[i + y].custo.toFixed(2));\n        objects[i + y].volume = parseFloat(objects[i + y].volume.toFixed(2));\n        array[y] = objects[i + y];\n      }\n      array.sort(compararPorCusto);\n    }\n    if (objects[i + 5]) {\n      let array_de_custo_ordenado = [];\n      adicionarAoArray(array_de_custo_ordenado, i, 5);\n      let qtde_de_produto_0 = 0.4;\n      let qtde_de_produto_1 = 0.1;\n      let qtde_de_produto_2 = 0.1;\n      let qtde_de_produto_3 = 0.1;\n      let qtde_de_produto_4 = 0.3;\n    } else if (objects[i + 4]) {\n      let array_de_custo_ordenado = [];\n      adicionarAoArray(array_de_custo_ordenado, i, 4);\n      let qtde_de_produto_0 = 0.3;\n      let qtde_de_produto_1 = 0.2;\n      let qtde_de_produto_2 = 0.2;\n      let qtde_de_produto_3 = 0.3;\n    } else if (objects[i + 3]) {\n      let array_de_custo_ordenado = [];\n      adicionarAoArray(array_de_custo_ordenado, i, 3);\n      let qtde_de_produto_0 = 0.4;\n      let qtde_de_produto_1 = 0.3;\n      let qtde_de_produto_2 = 0.3;\n    } else if (objects[i + 2]) {\n      let array_de_custo_ordenado = [];\n      adicionarAoArray(array_de_custo_ordenado, i, 2);\n      let qtde_de_produto_0 = 0.6;\n      let qtde_de_produto_1 = 0.4;\n      let per_de_p = [0.6, 0.4];\n      let comb = [];\n      for (let r = 0; r < array_de_custo_ordenado.length; r++) {\n        let p = array_de_custo_ordenado[r];\n        let qtde = parseInt(VolumeCaminhao / p.volume * per_de_p[r]);\n        comb = {\n          nome: p.nome,\n          custo_unitario: p.custo,\n          qtde: qtde,\n          custo_total: parseFloat((qtde * p.custo).toFixed(2)),\n          valor_unitario: lucroDesejado,\n          valor_total: p.nome,\n          lucro_total_produto: p.nome,\n          volume_unitario: p.volume,\n          volume_total: p.nome,\n          peso_unitario: p.peso,\n          peso_total: p.nome\n        };\n      }\n    } else {\n      return null;\n    }\n    return 1;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Simulacao\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"custom-cursor Simulacao-title\",\n      children: \"Simula\\xE7\\xE3o De Lucro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PriceWannaWin\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quanto de lucro deseja ganhar?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe o lucro desejado\",\n        value: lucroDesejado,\n        onChange: e => setLucroDesejado(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Capacidade de peso por metros cubicos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe o peso m\\xE1ximo\",\n        value: capacidade,\n        onChange: e => setCapacidade(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Capacidade em metros cubicos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe a capacidade do caminh\\xE3o\",\n        value: VolumeCaminhao,\n        onChange: e => setVolumeCaminhao(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Frete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe a capacidade do caminh\\xE3o\",\n        value: Frete,\n        onChange: e => setFrete(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"M\\xE1ximo de lucro sobre produto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe a capacidade do caminh\\xE3o\",\n        value: maximoLucroUni,\n        onChange: e => setMaximoLucroUni(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGerarPossibilidades,\n        children: \"Gerar Possibilidades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RespostaSimulacao, {\n      combinacoesUnitarias: combinacaoUnica,\n      frete: Frete,\n      combinations: combinations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 9\n  }, this);\n}\n_s(Simulacao, \"qxm7o7rlBFzPj6t60xn14qArUAw=\");\n_c = Simulacao;\nexport default Simulacao;\nvar _c;\n$RefreshReg$(_c, \"Simulacao\");","map":{"version":3,"names":["React","useEffect","useState","getFirestore","collection","getDocs","initializeApp","firebaseConfig","RespostaSimulacao","jsxDEV","_jsxDEV","Simulacao","_s","produtos","setProdutos","lucroDesejado","setLucroDesejado","capacidade","setCapacidade","VolumeCaminhao","setVolumeCaminhao","Frete","setFrete","maximoLucroUni","setMaximoLucroUni","combinations","setCombinations","combinacaoUnica","setcombinacaoUnica","fetchProdutos","app","db","produtosRef","produtosSnapshot","produtosData","docs","map","doc","id","data","error","console","handleGerarPossibilidades","info_products","p","custo","parseFloat","PRECO_FINAL","nome","Nome","peso","Peso","volume","m3","TODAS_AS_COMBINACOES","Set","tentativas","combsUnicas","forEach","produto","qtde","parseInt","peso_atual","comb","toFixed","peso_unitario","volume_unitario","custoUnitario","vendaUnitario","lucroUnitario","lucroTotal","lucroEmCima","push","indice","array","comb_array","length","log","encherCaminhao","objects","i","compararPorCusto","a","b","adicionarAoArray","n","y","sort","array_de_custo_ordenado","qtde_de_produto_0","qtde_de_produto_1","qtde_de_produto_2","qtde_de_produto_3","qtde_de_produto_4","per_de_p","r","custo_unitario","custo_total","valor_unitario","valor_total","lucro_total_produto","volume_total","peso_total","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","combinacoesUnitarias","frete","_c","$RefreshReg$"],"sources":["C:/Users/Caiuã/Desktop/DEV - PATH/TRABALHO/cadastro-produtos-react/src/Simulacao.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\r\nimport { initializeApp } from 'firebase/app'; \r\nimport firebaseConfig from './Components/firebaseConfig'; \r\nimport RespostaSimulacao from './Components/RespostaSimulacao';\r\n\r\nfunction Simulacao() {\r\n    const [produtos, setProdutos] = useState([]);\r\n    const [lucroDesejado, setLucroDesejado] = useState('');\r\n    const [capacidade, setCapacidade] = useState('');\r\n    const [VolumeCaminhao, setVolumeCaminhao] = useState('');\r\n    const [Frete, setFrete] = useState('');\r\n    const [maximoLucroUni, setMaximoLucroUni] = useState('');\r\n    const [combinations, setCombinations] = useState([]);\r\n    const [combinacaoUnica, setcombinacaoUnica] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchProdutos = async () => {\r\n            try {\r\n                const app = initializeApp(firebaseConfig);\r\n                const db = getFirestore(app);\r\n                const produtosRef = collection(db, 'produtos');\r\n                const produtosSnapshot = await getDocs(produtosRef);\r\n                const produtosData = produtosSnapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }));\r\n                setProdutos(produtosData);\r\n            } catch (error) {\r\n                console.error('Erro ao buscar os produtos:', error);\r\n            }\r\n        };\r\n        fetchProdutos();\r\n    }, []); \r\n\r\n    const handleGerarPossibilidades = () => {\r\n        const info_products = produtos.map(p => ({\r\n            custo: parseFloat(p.PRECO_FINAL),\r\n            nome: p.Nome,\r\n            peso: parseFloat(p.Peso),\r\n            volume: parseFloat(p.m3)\r\n        }));\r\n    \r\n        let TODAS_AS_COMBINACOES = new Set();\r\n        let tentativas = 0;\r\n\r\n        let combsUnicas = []\r\n        info_products.forEach(produto => {\r\n            let qtde = parseInt(parseInt(VolumeCaminhao) / produto.volume);\r\n            let peso_atual = 0;\r\n        \r\n            if ((qtde * produto.peso) < parseInt(VolumeCaminhao) * parseInt(capacidade)) {\r\n                let comb = {\r\n                    nome: produto.nome,\r\n                    qtde: qtde,\r\n                    peso: parseInt((qtde * parseFloat(produto.peso)).toFixed(2)),\r\n                    peso_unitario: produto.peso,\r\n                    volume_unitario: parseFloat(produto.volume.toFixed(2)),\r\n                    volume: parseFloat((produto.volume * qtde).toFixed(4)),\r\n                    custoUnitario: produto.custo,\r\n                    vendaUnitario: parseFloat(((lucroDesejado / ((produto.custo * qtde) + parseInt(Frete)) * produto.custo) + produto.custo).toFixed(2)),\r\n                    lucroUnitario: parseFloat((lucroDesejado / ((produto.custo * qtde) + parseInt(Frete)) * produto.custo).toFixed(2)),\r\n                    lucroTotal: parseFloat(((lucroDesejado / ((produto.custo * qtde) + parseInt(Frete)) * produto.custo) * qtde).toFixed(2)),\r\n                };\r\n\r\n\r\n                let lucroEmCima = (comb.vendaUnitario / comb.custoUnitario)*100\r\n                if(lucroEmCima < parseInt(maximoLucroUni))\r\n                    combsUnicas.push(comb)\r\n            }\r\n        });\r\n\r\n        setcombinacaoUnica(combsUnicas);\r\n        \r\n        // while (TODAS_AS_COMBINACOES.size < 100 && tentativas < 2500) {\r\n        //     let combinacao2 = encherCaminhao(info_products);\r\n        //     if (combinacao2) {\r\n        //         TODAS_AS_COMBINACOES.add(JSON.stringify(combinacao2));\r\n        //     }\r\n        //     tentativas++;\r\n        // }\r\n\r\n        // let masterCombinacoes = [];\r\n        // Array.from(TODAS_AS_COMBINACOES).map(comb =>{\r\n        //     masterCombinacoes.push(JSON.parse(comb))\r\n        // });\r\n\r\n        // setCombinations(masterCombinacoes)\r\n\r\n        let indice = 0;\r\n        let array = [];\r\n        let comb_array = []\r\n        while(indice < info_products.length){\r\n            if(array.length === 4){\r\n                comb_array.push(array);\r\n                array = [];\r\n                console.log(comb_array)\r\n            }\r\n\r\n            array.push(encherCaminhao(info_products, indice));\r\n            indice++;\r\n        }\r\n\r\n    };\r\n\r\n    function encherCaminhao(objects, i){\r\n\r\n        function compararPorCusto(a, b) {\r\n            return a.custo - b.custo;\r\n        }\r\n\r\n        function adicionarAoArray(array, i, n){\r\n            for(let y = 0; y < n; y++){\r\n                objects[i+y].custo = parseFloat(objects[i+y].custo.toFixed(2));\r\n                objects[i+y].volume = parseFloat(objects[i+y].volume.toFixed(2));\r\n                array[y] = objects[i+y];\r\n            }\r\n\r\n            array.sort(compararPorCusto);\r\n\r\n\r\n        }\r\n\r\n        if(objects[i+5]){\r\n\r\n            let array_de_custo_ordenado = []\r\n            adicionarAoArray(array_de_custo_ordenado, i, 5);\r\n            let qtde_de_produto_0 = 0.4;\r\n            let qtde_de_produto_1 = 0.1;\r\n            let qtde_de_produto_2 = 0.1;\r\n            let qtde_de_produto_3 = 0.1;\r\n            let qtde_de_produto_4 = 0.3;\r\n\r\n        }else if(objects[i+4]){\r\n\r\n            let array_de_custo_ordenado = []\r\n            adicionarAoArray(array_de_custo_ordenado, i, 4);\r\n\r\n            let qtde_de_produto_0 = 0.3;\r\n            let qtde_de_produto_1 = 0.2;\r\n            let qtde_de_produto_2 = 0.2;\r\n            let qtde_de_produto_3 = 0.3;\r\n\r\n\r\n        }else if(objects[i+3]){\r\n\r\n            let array_de_custo_ordenado = []\r\n            adicionarAoArray(array_de_custo_ordenado, i, 3);\r\n            \r\n            let qtde_de_produto_0 = 0.4;\r\n            let qtde_de_produto_1 = 0.3;\r\n            let qtde_de_produto_2 = 0.3;\r\n\r\n        }else if(objects[i+2]){\r\n\r\n            let array_de_custo_ordenado = []\r\n            adicionarAoArray(array_de_custo_ordenado, i, 2);\r\n            \r\n            let qtde_de_produto_0 = 0.6;\r\n            let qtde_de_produto_1 = 0.4;\r\n\r\n            let per_de_p = [0.6, 0.4]\r\n\r\n            let comb = [];\r\n\r\n            for(let r = 0; r < array_de_custo_ordenado.length; r++){\r\n                let p = array_de_custo_ordenado[r];\r\n                let qtde = parseInt((VolumeCaminhao / p.volume) * per_de_p[r])\r\n                comb = {\r\n                    nome: p.nome,\r\n                    custo_unitario: p.custo,\r\n                    qtde: qtde,\r\n                    custo_total: parseFloat((qtde * p.custo).toFixed(2)),\r\n                    valor_unitario: lucroDesejado,\r\n                    valor_total: p.nome,\r\n                    lucro_total_produto: p.nome,\r\n                    volume_unitario: p.volume,\r\n                    volume_total: p.nome,\r\n                    peso_unitario: p.peso,\r\n                    peso_total: p.nome\r\n\r\n                }\r\n            }\r\n            \r\n        }else{\r\n            return null;\r\n        }\r\n        return 1;\r\n    }\r\n\r\n\r\n    \r\n    return (\r\n        <div className='Simulacao'>\r\n            <h1 className='custom-cursor Simulacao-title'>Simulação De Lucro</h1>\r\n            <div className='PriceWannaWin'>\r\n                <h2>Quanto de lucro deseja ganhar?</h2>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o lucro desejado' \r\n                    value={lucroDesejado}\r\n                    onChange={(e) => setLucroDesejado(e.target.value)}\r\n                />\r\n                <h3>Capacidade de peso por metros cubicos</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o peso máximo'\r\n                    value={capacidade}\r\n                    onChange={(e) => setCapacidade(e.target.value)} \r\n                />\r\n                <h3>Capacidade em metros cubicos</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe a capacidade do caminhão'\r\n                    value={VolumeCaminhao}\r\n                    onChange={(e) => setVolumeCaminhao(e.target.value)} \r\n                />\r\n                <h3>Frete</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe a capacidade do caminhão'\r\n                    value={Frete}\r\n                    onChange={(e) => setFrete(e.target.value)} \r\n                />\r\n                <h3>Máximo de lucro sobre produto</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe a capacidade do caminhão'\r\n                    value={maximoLucroUni}\r\n                    onChange={(e) => setMaximoLucroUni(e.target.value)} \r\n                />\r\n                <button onClick={handleGerarPossibilidades}>Gerar Possibilidades</button>\r\n            </div>\r\n            <RespostaSimulacao combinacoesUnitarias={combinacaoUnica} frete={Frete} combinations={combinations} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Simulacao;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}