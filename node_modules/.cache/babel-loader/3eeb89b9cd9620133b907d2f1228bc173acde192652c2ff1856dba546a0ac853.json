{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caiu\\xE3\\\\Desktop\\\\DEV - PATH\\\\TRABALHO\\\\cadastro-produtos-react\\\\src\\\\Simulacao.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\nimport { initializeApp } from 'firebase/app';\nimport firebaseConfig from './Components/firebaseConfig';\nimport RespostaSimulacao from './Components/RespostaSimulacao';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Simulacao() {\n  _s();\n  const [produtos, setProdutos] = useState([]);\n  const [lucroDesejado, setLucroDesejado] = useState('');\n  const [pesoMaximo, setPesoMaximo] = useState('');\n  const [capacidadeCaminhao, setCapacidadeCaminhao] = useState('');\n  const [combinations, setCombinations] = useState([]);\n  useEffect(() => {\n    const fetchProdutos = async () => {\n      try {\n        const app = initializeApp(firebaseConfig);\n        const db = getFirestore(app);\n        const produtosRef = collection(db, 'produtos');\n        const produtosSnapshot = await getDocs(produtosRef);\n        const produtosData = produtosSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setProdutos(produtosData);\n      } catch (error) {\n        console.error('Erro ao buscar os produtos:', error);\n      }\n    };\n    fetchProdutos();\n  }, []);\n  const handleGerarPossibilidades = () => {\n    console.log('Valor de lucroDesejado:', lucroDesejado);\n    console.log('Valor de pesoMaximo:', pesoMaximo);\n    console.log('Valor de capacidadeCaminhao:', capacidadeCaminhao);\n    const info_products = produtos.map(p => ({\n      custo: parseFloat(p.PRECO_FINAL),\n      nome: p.Nome,\n      peso: parseFloat(p.Peso),\n      volume: parseFloat(p.m3)\n    }));\n    console.log('Produtos:', info_products);\n    encherCaminhaoComVariosProdutos(info_products);\n  };\n  function encherCaminhaoComVariosProdutos(produtos) {\n    const newCombinations = [];\n    const combinationsUtil = (arr, data, start, end, index) => {\n      if (index === data.length) {\n        const combination = [];\n        let volumeTotal = 0;\n        let pesoTotal = 0;\n        let custoTotal = 0;\n        for (let j = 0; j < data.length; j++) {\n          if (data[j]) {\n            combination.push(produtos[j].nome);\n            volumeTotal += produtos[j].volume;\n            pesoTotal += produtos[j].peso;\n            custoTotal += produtos[j].custo;\n          }\n        }\n        if (volumeTotal <= capacidadeCaminhao && pesoTotal <= pesoMaximo) {\n          const custoMedio = custoTotal / combination.length;\n          const vendaMedio = custoMedio * (1 + lucroDesejado / 100);\n          const lucroMedio = vendaMedio - custoMedio;\n          newCombinations.push({\n            produtos: combination,\n            volumeTotal,\n            pesoTotal,\n            custoMedio: custoMedio.toFixed(2),\n            vendaMedio: vendaMedio.toFixed(2),\n            lucroMedio: lucroMedio.toFixed(2)\n          });\n        }\n        return;\n      }\n      for (let i = start; i <= end && end - i + 1 >= data.length - index; i++) {\n        data[index] = arr[i];\n        combinationsUtil(arr, data, i + 1, end, index + 1);\n      }\n    };\n    for (let r = 1; r <= produtos.length; r++) {\n      const data = new Array(r).fill(false);\n      combinationsUtil(produtos, data, 0, produtos.length - 1, 0);\n    }\n    console.log('Novas combinações:', newCombinations);\n    setCombinations(newCombinations);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Simulacao\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"custom-cursor Simulacao-title\",\n      children: \"Simula\\xE7\\xE3o De Lucro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PriceWannaWin\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quanto de lucro deseja ganhar?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe o lucro desejado\",\n        value: lucroDesejado,\n        onChange: e => setLucroDesejado(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Peso m\\xE1ximo caminh\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe o peso m\\xE1ximo\",\n        value: pesoMaximo,\n        onChange: e => setPesoMaximo(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Capacidade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe a capacidade do caminh\\xE3o\",\n        value: capacidadeCaminhao,\n        onChange: e => setCapacidadeCaminhao(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGerarPossibilidades,\n        children: \"Gerar Possibilidades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RespostaSimulacao, {\n      combinations: combinations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n_s(Simulacao, \"1n0gHHpGrF/ggzEhEgKMuWYqgBo=\");\n_c = Simulacao;\nexport default Simulacao;\nvar _c;\n$RefreshReg$(_c, \"Simulacao\");","map":{"version":3,"names":["React","useEffect","useState","getFirestore","collection","getDocs","initializeApp","firebaseConfig","RespostaSimulacao","jsxDEV","_jsxDEV","Simulacao","_s","produtos","setProdutos","lucroDesejado","setLucroDesejado","pesoMaximo","setPesoMaximo","capacidadeCaminhao","setCapacidadeCaminhao","combinations","setCombinations","fetchProdutos","app","db","produtosRef","produtosSnapshot","produtosData","docs","map","doc","id","data","error","console","handleGerarPossibilidades","log","info_products","p","custo","parseFloat","PRECO_FINAL","nome","Nome","peso","Peso","volume","m3","encherCaminhaoComVariosProdutos","newCombinations","combinationsUtil","arr","start","end","index","length","combination","volumeTotal","pesoTotal","custoTotal","j","push","custoMedio","vendaMedio","lucroMedio","toFixed","i","r","Array","fill","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Caiuã/Desktop/DEV - PATH/TRABALHO/cadastro-produtos-react/src/Simulacao.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\r\nimport { initializeApp } from 'firebase/app'; \r\nimport firebaseConfig from './Components/firebaseConfig'; \r\nimport RespostaSimulacao from './Components/RespostaSimulacao';\r\n\r\nfunction Simulacao() {\r\n    const [produtos, setProdutos] = useState([]);\r\n    const [lucroDesejado, setLucroDesejado] = useState('');\r\n    const [pesoMaximo, setPesoMaximo] = useState('');\r\n    const [capacidadeCaminhao, setCapacidadeCaminhao] = useState('');\r\n    const [combinations, setCombinations] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchProdutos = async () => {\r\n            try {\r\n                const app = initializeApp(firebaseConfig);\r\n                const db = getFirestore(app);\r\n                const produtosRef = collection(db, 'produtos');\r\n                const produtosSnapshot = await getDocs(produtosRef);\r\n                const produtosData = produtosSnapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }));\r\n                setProdutos(produtosData);\r\n            } catch (error) {\r\n                console.error('Erro ao buscar os produtos:', error);\r\n            }\r\n        };\r\n        fetchProdutos();\r\n    }, []); \r\n\r\n    const handleGerarPossibilidades = () => {\r\n        console.log('Valor de lucroDesejado:', lucroDesejado);\r\n        console.log('Valor de pesoMaximo:', pesoMaximo);\r\n        console.log('Valor de capacidadeCaminhao:', capacidadeCaminhao);\r\n\r\n        const info_products = produtos.map(p => ({\r\n            custo: parseFloat(p.PRECO_FINAL),\r\n            nome: p.Nome,\r\n            peso: parseFloat(p.Peso),\r\n            volume: parseFloat(p.m3)\r\n        }));\r\n\r\n        console.log('Produtos:', info_products);\r\n\r\n        encherCaminhaoComVariosProdutos(info_products);\r\n    };\r\n\r\n    function encherCaminhaoComVariosProdutos(produtos){\r\n        const newCombinations = [];\r\n\r\n        const combinationsUtil = (arr, data, start, end, index) => {\r\n            if (index === data.length) {\r\n                const combination = [];\r\n                let volumeTotal = 0;\r\n                let pesoTotal = 0;\r\n                let custoTotal = 0;\r\n                for (let j = 0; j < data.length; j++) {\r\n                    if (data[j]) {\r\n                        combination.push(produtos[j].nome);\r\n                        volumeTotal += produtos[j].volume;\r\n                        pesoTotal += produtos[j].peso;\r\n                        custoTotal += produtos[j].custo;\r\n                    }\r\n                }\r\n                if (volumeTotal <= capacidadeCaminhao && pesoTotal <= pesoMaximo) {\r\n                    const custoMedio = custoTotal / combination.length;\r\n                    const vendaMedio = custoMedio * (1 + lucroDesejado / 100);\r\n                    const lucroMedio = vendaMedio - custoMedio;\r\n                    newCombinations.push({\r\n                        produtos: combination,\r\n                        volumeTotal,\r\n                        pesoTotal,\r\n                        custoMedio: custoMedio.toFixed(2),\r\n                        vendaMedio: vendaMedio.toFixed(2),\r\n                        lucroMedio: lucroMedio.toFixed(2)\r\n                    });\r\n                }\r\n                return;\r\n            }\r\n\r\n            for (let i = start; i <= end && end - i + 1 >= data.length - index; i++) {\r\n                data[index] = arr[i];\r\n                combinationsUtil(arr, data, i + 1, end, index + 1);\r\n            }\r\n        };\r\n\r\n        for (let r = 1; r <= produtos.length; r++) {\r\n            const data = new Array(r).fill(false);\r\n            combinationsUtil(produtos, data, 0, produtos.length - 1, 0);\r\n        }\r\n\r\n        console.log('Novas combinações:', newCombinations);\r\n        setCombinations(newCombinations);\r\n    }\r\n    \r\n    return (\r\n        <div className='Simulacao'>\r\n            <h1 className='custom-cursor Simulacao-title'>Simulação De Lucro</h1>\r\n            <div className='PriceWannaWin'>\r\n                <h2>Quanto de lucro deseja ganhar?</h2>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o lucro desejado' \r\n                    value={lucroDesejado}\r\n                    onChange={(e) => setLucroDesejado(e.target.value)}\r\n                />\r\n                <h3>Peso máximo caminhão</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o peso máximo'\r\n                    value={pesoMaximo}\r\n                    onChange={(e) => setPesoMaximo(e.target.value)} \r\n                />\r\n                <h3>Capacidade</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe a capacidade do caminhão'\r\n                    value={capacidadeCaminhao}\r\n                    onChange={(e) => setCapacidadeCaminhao(e.target.value)} \r\n                />\r\n                <button onClick={handleGerarPossibilidades}>Gerar Possibilidades</button>\r\n            </div>\r\n            <RespostaSimulacao combinations={combinations} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Simulacao;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}