{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caiu\\xE3\\\\Desktop\\\\DEV - PATH\\\\TRABALHO\\\\cadastro-produtos-react\\\\src\\\\Simulacao.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\nimport { initializeApp } from 'firebase/app';\nimport firebaseConfig from './Components/firebaseConfig';\nimport RespostaSimulacao from './Components/RespostaSimulacao';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Simulacao() {\n  _s();\n  const [produtos, setProdutos] = useState([]);\n  const [lucroDesejado, setLucroDesejado] = useState('');\n  const [capacidade, setCapacidade] = useState('');\n  const [VolumeCaminhao, setVolumeCaminhao] = useState('');\n  const [maximoLucroUni, setMaximoLucroUni] = useState('');\n  const [combinations, setCombinations] = useState([]);\n  useEffect(() => {\n    const fetchProdutos = async () => {\n      try {\n        const app = initializeApp(firebaseConfig);\n        const db = getFirestore(app);\n        const produtosRef = collection(db, 'produtos');\n        const produtosSnapshot = await getDocs(produtosRef);\n        const produtosData = produtosSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setProdutos(produtosData);\n      } catch (error) {\n        console.error('Erro ao buscar os produtos:', error);\n      }\n    };\n    fetchProdutos();\n  }, []);\n  const handleGerarPossibilidades = () => {\n    const info_products = produtos.map(p => ({\n      custo: parseFloat(p.PRECO_FINAL),\n      nome: p.Nome,\n      peso: parseFloat(p.Peso),\n      volume: parseFloat(p.m3)\n    }));\n    let TODAS_AS_COMBINACOES = new Set();\n    let tentativas = 0;\n    while (TODAS_AS_COMBINACOES.size < 100 && tentativas < 1000) {\n      let combinacao = encherCaminhao(info_products);\n      if (combinacao) {\n        TODAS_AS_COMBINACOES.add(JSON.stringify(combinacao));\n      }\n      tentativas++;\n    }\n    console.log(Array.from(TODAS_AS_COMBINACOES).map(comb => JSON.parse(comb)));\n  };\n  function encherCaminhao(objects) {\n    let random_nums = [];\n    for (let i = 0; i < 6; i++) {\n      random_nums[i] = Math.floor(Math.random() * objects.length);\n    }\n    let aparicoes = contarPorcentagens(random_nums, objects.length);\n    let chaves = Object.keys(aparicoes);\n    let combinacao = [];\n    for (let chave of chaves) {\n      let percentual = aparicoes[chave];\n      let produto = objects[chave];\n      let qtde = parseFloat(VolumeCaminhao / produto.volume * percentual);\n      let comb = {\n        nome: produto.nome,\n        aparicao: percentual,\n        qtde: parseInt(qtde),\n        peso: parseFloat((qtde * produto.peso).toFixed(2)),\n        peso_unitario: produto.peso,\n        volume_unitario: parseFloat(produto.volume.toFixed(2)),\n        volume: parseFloat((produto.volume * qtde).toFixed(2)),\n        custoUnitario: produto.custo,\n        vendaUnitario: parseFloat((produto.custo / (lucroDesejado * percentual) * produto.custo + produto.custo).toFixed(2)),\n        lucroUnitario: parseFloat((produto.custo / (lucroDesejado * percentual) * produto.custo).toFixed(2)),\n        lucroTotal: parseFloat((produto.custo / (lucroDesejado * percentual) * produto.custo * qtde).toFixed(2))\n      };\n      if (isFinite(comb.qtde) && !isNaN(comb.qtde) && isFinite(comb.peso) && !isNaN(comb.peso)) if (parseFloat(comb.lucroUnitario) <= parseFloat(maximoLucroUni)) {\n        let s = 0;\n        combinacao.forEach(e => {\n          s += e.volume;\n        });\n        let vol_restante = parseFloat(s / parseInt(VolumeCaminhao) * 100);\n        if (vol_restante > 0) {\n          encherRestante(combinacao, vol_restante);\n        }\n        combinacao.push(comb);\n      }\n    }\n    let somaPesos = 0;\n    combinacao.forEach(comb => {\n      somaPesos += parseFloat(comb.peso);\n    });\n    let somaVolume = 0;\n    combinacao.forEach(comb => {\n      somaVolume += parseFloat(comb.volume);\n    });\n    let somaLucro = 0;\n    combinacao.forEach(comb => {\n      if (!isNaN(comb.lucroUnitario)) {\n        somaLucro += comb.lucroUnitario * comb.qtde;\n      }\n    });\n    let pesoMax = parseFloat(VolumeCaminhao) * parseFloat(capacidade);\n    if (somaPesos < pesoMax - pesoMax * 0.05) {\n      if (somaLucro >= lucroDesejado - lucroDesejado * 0.25) {\n        combinacao.push(somaLucro);\n        combinacao.push(somaVolume);\n        return combinacao;\n      }\n    } else {\n      combinacao.push(somaLucro);\n    }\n  }\n  function encherRestante(array, restante) {\n    console.log(array, restante);\n  }\n  function contarPorcentagens(vetor, tamanhoTotal) {\n    var contagem = {};\n    for (var i = 0; i < vetor.length; i++) {\n      var numero = vetor[i];\n      if (contagem[numero]) contagem[numero]++;else contagem[numero] = 1;\n    }\n    for (var numero in contagem) contagem[numero] = contagem[numero] / tamanhoTotal;\n    return contagem;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Simulacao\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"custom-cursor Simulacao-title\",\n      children: \"Simula\\xE7\\xE3o De Lucro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PriceWannaWin\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quanto de lucro deseja ganhar?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe o lucro desejado\",\n        value: lucroDesejado,\n        onChange: e => setLucroDesejado(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Capacidade de peso por metros cubicos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe o peso m\\xE1ximo\",\n        value: capacidade,\n        onChange: e => setCapacidade(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Capacidade em metros cubicos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe a capacidade do caminh\\xE3o\",\n        value: VolumeCaminhao,\n        onChange: e => setVolumeCaminhao(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"M\\xE1ximo de lucro sobre produto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Informe a capacidade do caminh\\xE3o\",\n        value: maximoLucroUni,\n        onChange: e => setMaximoLucroUni(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGerarPossibilidades,\n        children: \"Gerar Possibilidades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RespostaSimulacao, {\n      combinations: combinations\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n}\n_s(Simulacao, \"XRB92dRna/tGcL1YRVoLs/wrP1g=\");\n_c = Simulacao;\nexport default Simulacao;\nvar _c;\n$RefreshReg$(_c, \"Simulacao\");","map":{"version":3,"names":["React","useEffect","useState","getFirestore","collection","getDocs","initializeApp","firebaseConfig","RespostaSimulacao","jsxDEV","_jsxDEV","Simulacao","_s","produtos","setProdutos","lucroDesejado","setLucroDesejado","capacidade","setCapacidade","VolumeCaminhao","setVolumeCaminhao","maximoLucroUni","setMaximoLucroUni","combinations","setCombinations","fetchProdutos","app","db","produtosRef","produtosSnapshot","produtosData","docs","map","doc","id","data","error","console","handleGerarPossibilidades","info_products","p","custo","parseFloat","PRECO_FINAL","nome","Nome","peso","Peso","volume","m3","TODAS_AS_COMBINACOES","Set","tentativas","size","combinacao","encherCaminhao","add","JSON","stringify","log","Array","from","comb","parse","objects","random_nums","i","Math","floor","random","length","aparicoes","contarPorcentagens","chaves","Object","keys","chave","percentual","produto","qtde","aparicao","parseInt","toFixed","peso_unitario","volume_unitario","custoUnitario","vendaUnitario","lucroUnitario","lucroTotal","isFinite","isNaN","s","forEach","e","vol_restante","encherRestante","push","somaPesos","somaVolume","somaLucro","pesoMax","array","restante","vetor","tamanhoTotal","contagem","numero","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Caiu√£/Desktop/DEV - PATH/TRABALHO/cadastro-produtos-react/src/Simulacao.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\r\nimport { initializeApp } from 'firebase/app'; \r\nimport firebaseConfig from './Components/firebaseConfig'; \r\nimport RespostaSimulacao from './Components/RespostaSimulacao';\r\n\r\nfunction Simulacao() {\r\n    const [produtos, setProdutos] = useState([]);\r\n    const [lucroDesejado, setLucroDesejado] = useState('');\r\n    const [capacidade, setCapacidade] = useState('');\r\n    const [VolumeCaminhao, setVolumeCaminhao] = useState('');\r\n    const [maximoLucroUni, setMaximoLucroUni] = useState('');\r\n    const [combinations, setCombinations] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchProdutos = async () => {\r\n            try {\r\n                const app = initializeApp(firebaseConfig);\r\n                const db = getFirestore(app);\r\n                const produtosRef = collection(db, 'produtos');\r\n                const produtosSnapshot = await getDocs(produtosRef);\r\n                const produtosData = produtosSnapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }));\r\n                setProdutos(produtosData);\r\n            } catch (error) {\r\n                console.error('Erro ao buscar os produtos:', error);\r\n            }\r\n        };\r\n        fetchProdutos();\r\n    }, []); \r\n\r\n    const handleGerarPossibilidades = () => {\r\n        const info_products = produtos.map(p => ({\r\n            custo: parseFloat(p.PRECO_FINAL),\r\n            nome: p.Nome,\r\n            peso: parseFloat(p.Peso),\r\n            volume: parseFloat(p.m3)\r\n        }));\r\n    \r\n        let TODAS_AS_COMBINACOES = new Set();\r\n        let tentativas = 0;\r\n        \r\n        while (TODAS_AS_COMBINACOES.size < 100 && tentativas < 1000) {\r\n            let combinacao = encherCaminhao(info_products);\r\n            if (combinacao) {\r\n                TODAS_AS_COMBINACOES.add(JSON.stringify(combinacao));\r\n            }\r\n            tentativas++;\r\n        }\r\n        \r\n        console.log(Array.from(TODAS_AS_COMBINACOES).map(comb => JSON.parse(comb)));\r\n    };\r\n\r\n    function encherCaminhao(objects){\r\n        let random_nums = []\r\n        for(let i = 0; i < 6; i++){\r\n            random_nums[i] = Math.floor(Math.random() * objects.length);\r\n        }\r\n\r\n        let aparicoes = contarPorcentagens(random_nums, objects.length);\r\n\r\n        let chaves = Object.keys(aparicoes);\r\n\r\n        let combinacao = []\r\n    \r\n        for(let chave of chaves){\r\n\r\n            let percentual = aparicoes[chave];\r\n            let produto = objects[chave];\r\n            let qtde = parseFloat((VolumeCaminhao/produto.volume) * percentual);\r\n    \r\n            let comb = {\r\n                nome: produto.nome,\r\n                aparicao: percentual,\r\n                qtde: parseInt(qtde),\r\n                peso: parseFloat((qtde * produto.peso).toFixed(2)),\r\n                peso_unitario: produto.peso,\r\n                volume_unitario: parseFloat(produto.volume.toFixed(2)),\r\n                volume: parseFloat((produto.volume * qtde).toFixed(2)),\r\n                custoUnitario: produto.custo,\r\n                vendaUnitario: parseFloat(((((produto.custo) / (lucroDesejado * percentual))* produto.custo) + produto.custo).toFixed(2)),\r\n                lucroUnitario: parseFloat((((produto.custo) / (lucroDesejado * percentual))* produto.custo).toFixed(2)),\r\n                lucroTotal: parseFloat(((((produto.custo) / (lucroDesejado * percentual))* produto.custo) * qtde).toFixed(2)),\r\n            }\r\n\r\n\r\n            if(isFinite(comb.qtde) && !isNaN(comb.qtde) && isFinite(comb.peso) && !isNaN(comb.peso))\r\n                if(parseFloat(comb.lucroUnitario) <= parseFloat(maximoLucroUni)){\r\n\r\n                    let s = 0;\r\n                    combinacao.forEach(e => {\r\n                        s += e.volume;\r\n                    })\r\n                    let vol_restante = parseFloat(s/parseInt(VolumeCaminhao) * 100);\r\n                    if(vol_restante > 0){\r\n                        encherRestante(combinacao, vol_restante);\r\n                    }\r\n\r\n                    combinacao.push(comb);\r\n\r\n                }\r\n        }\r\n    \r\n        let somaPesos = 0;\r\n        combinacao.forEach(comb => {\r\n            somaPesos += parseFloat(comb.peso)\r\n        })\r\n    \r\n        let somaVolume = 0;\r\n        combinacao.forEach(comb => {\r\n            somaVolume += parseFloat(comb.volume)\r\n        })\r\n    \r\n        let somaLucro = 0;\r\n        combinacao.forEach(comb => {\r\n            if (!isNaN(comb.lucroUnitario)) {\r\n                somaLucro += (comb.lucroUnitario * comb.qtde);\r\n            }\r\n        });\r\n    \r\n    \r\n        let pesoMax = parseFloat(VolumeCaminhao)*parseFloat(capacidade)\r\n    \r\n        if(somaPesos < (pesoMax - (pesoMax * 0.05))){\r\n            if(somaLucro >= (lucroDesejado - (lucroDesejado * 0.25))){\r\n                combinacao.push(somaLucro)\r\n                combinacao.push(somaVolume)\r\n                return combinacao;\r\n            }\r\n        }else{\r\n            combinacao.push(somaLucro)\r\n        }\r\n    }\r\n\r\n    function encherRestante(array, restante){\r\n        console.log(array, restante)\r\n    }\r\n    \r\n    function contarPorcentagens(vetor, tamanhoTotal) {\r\n        var contagem = {};\r\n\r\n        for (var i = 0; i < vetor.length; i++) {\r\n            var numero = vetor[i];\r\n\r\n            if (contagem[numero]) \r\n                contagem[numero]++;\r\n            else \r\n                contagem[numero] = 1;\r\n        }\r\n    \r\n        for (var numero in contagem) \r\n            contagem[numero] = (contagem[numero] / tamanhoTotal);\r\n        return contagem;\r\n    }\r\n    \r\n    return (\r\n        <div className='Simulacao'>\r\n            <h1 className='custom-cursor Simulacao-title'>Simula√ß√£o De Lucro</h1>\r\n            <div className='PriceWannaWin'>\r\n                <h2>Quanto de lucro deseja ganhar?</h2>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o lucro desejado' \r\n                    value={lucroDesejado}\r\n                    onChange={(e) => setLucroDesejado(e.target.value)}\r\n                />\r\n                <h3>Capacidade de peso por metros cubicos</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe o peso m√°ximo'\r\n                    value={capacidade}\r\n                    onChange={(e) => setCapacidade(e.target.value)} \r\n                />\r\n                <h3>Capacidade em metros cubicos</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe a capacidade do caminh√£o'\r\n                    value={VolumeCaminhao}\r\n                    onChange={(e) => setVolumeCaminhao(e.target.value)} \r\n                />\r\n                <h3>M√°ximo de lucro sobre produto</h3>\r\n                <input \r\n                    type='number' \r\n                    placeholder='Informe a capacidade do caminh√£o'\r\n                    value={maximoLucroUni}\r\n                    onChange={(e) => setMaximoLucroUni(e.target.value)} \r\n                />\r\n                <button onClick={handleGerarPossibilidades}>Gerar Possibilidades</button>\r\n            </div>\r\n            <RespostaSimulacao combinations={combinations} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Simulacao;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}