{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Caiu\\xE3\\\\Desktop\\\\DEV - PATH\\\\TRABALHO\\\\cadastro-produtos-react\\\\src\\\\Simulacao.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\nimport { initializeApp } from 'firebase/app';\nimport firebaseConfig from './Components/firebaseConfig';\nimport RespostaSimulacao from './Components/RespostaSimulacao';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Simulacao() {\n  _s();\n  const [produtos, setProdutos] = useState([]);\n  const [combinações, setCombinações] = useState([]);\n  const [lucroDesejado, setLucroDesejado] = useState(0);\n  const [pesoMaximo, setPesoMaximo] = useState(0);\n  const [capacidadeCaminhao, setCapacidadeCaminhao] = useState(0);\n  useEffect(() => {\n    const fetchProdutos = async () => {\n      try {\n        const app = initializeApp(firebaseConfig);\n        const db = getFirestore(app);\n        const produtosRef = collection(db, 'produtos');\n        const produtosSnapshot = await getDocs(produtosRef);\n        const produtosData = produtosSnapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        setProdutos(produtosData);\n      } catch (error) {\n        console.error('Erro ao buscar os produtos:', error);\n      }\n    };\n    fetchProdutos();\n  }, []);\n  const gerarPossibilidades = () => {\n    const combinaçõesPossíveis = [];\n\n    // Função auxiliar para gerar combinações recursivamente\n    const gerarCombinações = (índice, combinaçãoAtual, pesoAtual, volumeAtual) => {\n      // Verifica se atingiu o peso máximo ou a capacidade do caminhão\n      if (pesoAtual > pesoMaximo || volumeAtual > capacidadeCaminhao) {\n        return;\n      }\n\n      // Verifica se a combinação atual atende ao lucro desejado\n      const lucroAtual = calcularLucro(combinaçãoAtual);\n      if (lucroAtual >= lucroDesejado) {\n        combinaçõesPossíveis.push(combinaçãoAtual);\n      }\n\n      // Gera novas combinações incluindo o produto atual e chama recursivamente para os próximos produtos\n      for (let i = índice; i < produtos.length; i++) {\n        const novoPeso = pesoAtual + produtos[i].peso;\n        const novoVolume = volumeAtual + produtos[i].m3;\n        gerarCombinações(i + 1, combinaçãoAtual.concat(produtos[i]), novoPeso, novoVolume);\n      }\n    };\n\n    // Inicia a geração de combinações\n    gerarCombinações(0, [], 0, 0);\n    setCombinações(combinaçõesPossíveis);\n  };\n\n  // Função para calcular o lucro total de uma combinação de produtos\n  const calcularLucro = combinação => {\n    return combinação.reduce((total, produto) => total + (produto.precoVenda - produto.precoFinal), 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Simulacao\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"custom-cursor Simulacao-title\",\n      children: \"Simula\\xE7\\xE3o De Lucro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PriceWannaWin\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Quanto de lucro deseja ganhar?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: lucroDesejado,\n        onChange: e => setLucroDesejado(parseFloat(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Peso m\\xE1ximo caminh\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: pesoMaximo,\n        onChange: e => setPesoMaximo(parseFloat(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Capacidade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: capacidadeCaminhao,\n        onChange: e => setCapacidadeCaminhao(parseFloat(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: gerarPossibilidades,\n        children: \"Gerar Possibilidades\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(RespostaSimulacao, {\n      combinações: combinações\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(Simulacao, \"7iyUGdFPBs9gUlIIbWXXV5TgfT4=\");\n_c = Simulacao;\nexport default Simulacao;\nvar _c;\n$RefreshReg$(_c, \"Simulacao\");","map":{"version":3,"names":["React","useEffect","useState","getFirestore","collection","getDocs","initializeApp","firebaseConfig","RespostaSimulacao","jsxDEV","_jsxDEV","Simulacao","_s","produtos","setProdutos","combinações","setCombinações","lucroDesejado","setLucroDesejado","pesoMaximo","setPesoMaximo","capacidadeCaminhao","setCapacidadeCaminhao","fetchProdutos","app","db","produtosRef","produtosSnapshot","produtosData","docs","map","doc","id","data","error","console","gerarPossibilidades","combinaçõesPossíveis","gerarCombinações","índice","combinaçãoAtual","pesoAtual","volumeAtual","lucroAtual","calcularLucro","push","i","length","novoPeso","peso","novoVolume","m3","concat","combinação","reduce","total","produto","precoVenda","precoFinal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","parseFloat","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Caiuã/Desktop/DEV - PATH/TRABALHO/cadastro-produtos-react/src/Simulacao.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getFirestore, collection, getDocs } from 'firebase/firestore';\r\nimport { initializeApp } from 'firebase/app'; \r\nimport firebaseConfig from './Components/firebaseConfig'; \r\nimport RespostaSimulacao from './Components/RespostaSimulacao';\r\n\r\nfunction Simulacao() {\r\n    const [produtos, setProdutos] = useState([]);\r\n    const [combinações, setCombinações] = useState([]);\r\n    const [lucroDesejado, setLucroDesejado] = useState(0);\r\n    const [pesoMaximo, setPesoMaximo] = useState(0);\r\n    const [capacidadeCaminhao, setCapacidadeCaminhao] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchProdutos = async () => {\r\n            try {\r\n                const app = initializeApp(firebaseConfig);\r\n                const db = getFirestore(app);\r\n                const produtosRef = collection(db, 'produtos');\r\n                const produtosSnapshot = await getDocs(produtosRef);\r\n                const produtosData = produtosSnapshot.docs.map(doc => ({\r\n                    id: doc.id,\r\n                    ...doc.data()\r\n                }));\r\n                setProdutos(produtosData);\r\n            } catch (error) {\r\n                console.error('Erro ao buscar os produtos:', error);\r\n            }\r\n        };\r\n        fetchProdutos();\r\n    }, []); \r\n\r\n    const gerarPossibilidades = () => {\r\n        const combinaçõesPossíveis = [];\r\n\r\n        // Função auxiliar para gerar combinações recursivamente\r\n        const gerarCombinações = (índice, combinaçãoAtual, pesoAtual, volumeAtual) => {\r\n            // Verifica se atingiu o peso máximo ou a capacidade do caminhão\r\n            if (pesoAtual > pesoMaximo || volumeAtual > capacidadeCaminhao) {\r\n                return;\r\n            }\r\n\r\n            // Verifica se a combinação atual atende ao lucro desejado\r\n            const lucroAtual = calcularLucro(combinaçãoAtual);\r\n            if (lucroAtual >= lucroDesejado) {\r\n                combinaçõesPossíveis.push(combinaçãoAtual);\r\n            }\r\n\r\n            // Gera novas combinações incluindo o produto atual e chama recursivamente para os próximos produtos\r\n            for (let i = índice; i < produtos.length; i++) {\r\n                const novoPeso = pesoAtual + produtos[i].peso;\r\n                const novoVolume = volumeAtual + produtos[i].m3;\r\n                gerarCombinações(i + 1, combinaçãoAtual.concat(produtos[i]), novoPeso, novoVolume);\r\n            }\r\n        };\r\n\r\n        // Inicia a geração de combinações\r\n        gerarCombinações(0, [], 0, 0);\r\n\r\n        setCombinações(combinaçõesPossíveis);\r\n    };\r\n\r\n    // Função para calcular o lucro total de uma combinação de produtos\r\n    const calcularLucro = (combinação) => {\r\n        return combinação.reduce((total, produto) => total + (produto.precoVenda - produto.precoFinal), 0);\r\n    };\r\n\r\n    return (\r\n        <div className='Simulacao'>\r\n            <h1 className='custom-cursor Simulacao-title'>Simulação De Lucro</h1>\r\n            <div className='PriceWannaWin'>\r\n                <h2>Quanto de lucro deseja ganhar?</h2>\r\n                <input \r\n                    type='number' \r\n                    value={lucroDesejado} \r\n                    onChange={(e) => setLucroDesejado(parseFloat(e.target.value))} \r\n                />\r\n                <h3>Peso máximo caminhão</h3>\r\n                <input \r\n                    type='number' \r\n                    value={pesoMaximo} \r\n                    onChange={(e) => setPesoMaximo(parseFloat(e.target.value))} \r\n                />\r\n                <h3>Capacidade</h3>\r\n                <input \r\n                    type='number' \r\n                    value={capacidadeCaminhao} \r\n                    onChange={(e) => setCapacidadeCaminhao(parseFloat(e.target.value))} \r\n                />\r\n                <button onClick={gerarPossibilidades}>Gerar Possibilidades</button>\r\n            </div>\r\n            <RespostaSimulacao combinações={combinações} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Simulacao;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}